"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMIPDStore = exports.injectedProvider = void 0;
const mipd_1 = require("mipd");
// if we're in the browser -> create the store once immediately
const mipdStore = /* @__PURE__ */ (() => typeof window !== "undefined" ? (0, mipd_1.createStore)() : undefined)();
/**
 * Get Injected Provider for given wallet by passing a wallet ID (rdns) using [EIP-6963](https://eips.ethereum.org/EIPS/eip-6963) Provider Discovery.
 * @param walletId - The Wallet Id (rdns) to check.
 * @example
 * ```ts
 * import { injectedProvider } from "thirdweb/wallets";
 *
 * const metamaskProvider = injectedProvider("io.metamask");
 *
 * if (metamaskProvider) {
 *  console.log("Metamask is installed");
 * }
 * ```
 * @returns The details of the Injected Provider if it exists. `undefined` otherwise.
 * @walletUtils
 */
function injectedProvider(walletId) {
    if (!mipdStore) {
        throw new Error("store not initialized");
    }
    const store = getMIPDStore();
    const injectedProviderDetail = store.findProvider({
        rdns: walletId,
    });
    return injectedProviderDetail?.provider;
}
exports.injectedProvider = injectedProvider;
/**
 * Get Injected Provider Details for given wallet ID (rdns)
 * @internal
 */
function getMIPDStore() {
    if (!mipdStore) {
        throw new Error("MIPD store not initialized");
    }
    return mipdStore;
}
exports.getMIPDStore = getMIPDStore;
//# sourceMappingURL=mipdStore.js.map