"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EMBEDDED_WALLET_IFRAME_ID = exports.createEmbeddedWalletIframeLink = exports.EmbeddedWalletIframeCommunicator = void 0;
const settings_js_1 = require("../../constants/settings.js");
const LocalStorage_js_1 = require("../Storage/LocalStorage.js");
const IframeCommunicator_js_1 = require("./IframeCommunicator.js");
/**
 * @internal
 */
class EmbeddedWalletIframeCommunicator extends IframeCommunicator_js_1.IframeCommunicator {
    /**
     * @internal
     */
    constructor({ clientId, baseUrl }) {
        super({
            iframeId: exports.EMBEDDED_WALLET_IFRAME_ID,
            link: createEmbeddedWalletIframeLink({
                clientId,
                path: settings_js_1.EMBEDDED_WALLET_PATH,
                baseUrl,
            }).href,
            baseUrl,
            container: document.body,
        });
        Object.defineProperty(this, "clientId", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: void 0
        });
        this.clientId = clientId;
    }
    /**
     * @internal
     */
    async onIframeLoadedInitVariables() {
        const localStorage = new LocalStorage_js_1.LocalStorage({
            clientId: this.clientId,
        });
        return {
            authCookie: await localStorage.getAuthCookie(),
            deviceShareStored: await localStorage.getDeviceShare(),
            walletUserId: await localStorage.getWalletUserId(),
            clientId: this.clientId,
        };
    }
}
exports.EmbeddedWalletIframeCommunicator = EmbeddedWalletIframeCommunicator;
// This is the URL and ID tag of the iFrame that we communicate with
/**
 * @internal
 */
function createEmbeddedWalletIframeLink({ clientId, baseUrl, path, queryParams, }) {
    const embeddedWalletUrl = new URL(`${path}`, baseUrl);
    if (queryParams) {
        for (const queryKey of Object.keys(queryParams)) {
            embeddedWalletUrl.searchParams.set(queryKey, queryParams[queryKey]?.toString() || "");
        }
    }
    embeddedWalletUrl.searchParams.set("clientId", clientId);
    return embeddedWalletUrl;
}
exports.createEmbeddedWalletIframeLink = createEmbeddedWalletIframeLink;
exports.EMBEDDED_WALLET_IFRAME_ID = "thirdweb-embedded-wallet-iframe";
//# sourceMappingURL=EmbeddedWalletIframeCommunicator.js.map