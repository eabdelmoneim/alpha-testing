"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRoyaltyInfoForToken = exports.decodeGetRoyaltyInfoForTokenResult = exports.encodeGetRoyaltyInfoForTokenParams = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const viem_1 = require("viem");
const FN_SELECTOR = "0x4cc157df";
const FN_INPUTS = [
    {
        type: "uint256",
        name: "tokenId",
    },
];
const FN_OUTPUTS = [
    {
        type: "address",
    },
    {
        type: "uint16",
    },
];
/**
 * Encodes the parameters for the "getRoyaltyInfoForToken" function.
 * @param options - The options for the getRoyaltyInfoForToken function.
 * @returns The encoded ABI parameters.
 * @extension COMMON
 * @example
 * ```ts
 * import { encodeGetRoyaltyInfoForTokenParams } "thirdweb/extensions/common";
 * const result = encodeGetRoyaltyInfoForTokenParams({
 *  tokenId: ...,
 * });
 * ```
 */
function encodeGetRoyaltyInfoForTokenParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [options.tokenId]);
}
exports.encodeGetRoyaltyInfoForTokenParams = encodeGetRoyaltyInfoForTokenParams;
/**
 * Decodes the result of the getRoyaltyInfoForToken function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension COMMON
 * @example
 * ```ts
 * import { decodeGetRoyaltyInfoForTokenResult } from "thirdweb/extensions/common";
 * const result = decodeGetRoyaltyInfoForTokenResult("...");
 * ```
 */
function decodeGetRoyaltyInfoForTokenResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result);
}
exports.decodeGetRoyaltyInfoForTokenResult = decodeGetRoyaltyInfoForTokenResult;
/**
 * Calls the "getRoyaltyInfoForToken" function on the contract.
 * @param options - The options for the getRoyaltyInfoForToken function.
 * @returns The parsed result of the function call.
 * @extension COMMON
 * @example
 * ```ts
 * import { getRoyaltyInfoForToken } from "thirdweb/extensions/common";
 *
 * const result = await getRoyaltyInfoForToken({
 *  tokenId: ...,
 * });
 *
 * ```
 */
async function getRoyaltyInfoForToken(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [options.tokenId],
    });
}
exports.getRoyaltyInfoForToken = getRoyaltyInfoForToken;
//# sourceMappingURL=getRoyaltyInfoForToken.js.map