"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRoleMember = exports.decodeGetRoleMemberResult = exports.encodeGetRoleMemberParams = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const viem_1 = require("viem");
const FN_SELECTOR = "0x9010d07c";
const FN_INPUTS = [
    {
        type: "bytes32",
        name: "role",
    },
    {
        type: "uint256",
        name: "index",
    },
];
const FN_OUTPUTS = [
    {
        type: "address",
    },
];
/**
 * Encodes the parameters for the "getRoleMember" function.
 * @param options - The options for the getRoleMember function.
 * @returns The encoded ABI parameters.
 * @extension COMMON
 * @example
 * ```
 * import { encodeGetRoleMemberParams } "thirdweb/extensions/common";
 * const result = encodeGetRoleMemberParams({
 *  role: ...,
 *  index: ...,
 * });
 * ```
 */
function encodeGetRoleMemberParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [options.role, options.index]);
}
exports.encodeGetRoleMemberParams = encodeGetRoleMemberParams;
/**
 * Decodes the result of the getRoleMember function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension COMMON
 * @example
 * ```
 * import { decodeGetRoleMemberResult } from "thirdweb/extensions/common";
 * const result = decodeGetRoleMemberResult("...");
 * ```
 */
function decodeGetRoleMemberResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result)[0];
}
exports.decodeGetRoleMemberResult = decodeGetRoleMemberResult;
/**
 * Calls the "getRoleMember" function on the contract.
 * @param options - The options for the getRoleMember function.
 * @returns The parsed result of the function call.
 * @extension COMMON
 * @example
 * ```
 * import { getRoleMember } from "thirdweb/extensions/common";
 *
 * const result = await getRoleMember({
 *  role: ...,
 *  index: ...,
 * });
 *
 * ```
 */
async function getRoleMember(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [options.role, options.index],
    });
}
exports.getRoleMember = getRoleMember;
//# sourceMappingURL=getRoleMember.js.map