"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.setTokenURI = exports.encodeSetTokenURIParams = void 0;
const prepare_contract_call_js_1 = require("../../../../../transaction/prepare-contract-call.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const FN_SELECTOR = "0x162094c4";
const FN_INPUTS = [
    {
        type: "uint256",
        name: "_tokenId",
    },
    {
        type: "string",
        name: "_uri",
    },
];
const FN_OUTPUTS = [];
/**
 * Encodes the parameters for the "setTokenURI" function.
 * @param options - The options for the setTokenURI function.
 * @returns The encoded ABI parameters.
 * @extension ERC1155
 * @example
 * ```ts
 * import { encodeSetTokenURIParams } "thirdweb/extensions/erc1155";
 * const result = encodeSetTokenURIParams({
 *  tokenId: ...,
 *  uri: ...,
 * });
 * ```
 */
function encodeSetTokenURIParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [options.tokenId, options.uri]);
}
exports.encodeSetTokenURIParams = encodeSetTokenURIParams;
/**
 * Calls the "setTokenURI" function on the contract.
 * @param options - The options for the "setTokenURI" function.
 * @returns A prepared transaction object.
 * @extension ERC1155
 * @example
 * ```ts
 * import { setTokenURI } from "thirdweb/extensions/erc1155";
 *
 * const transaction = setTokenURI({
 *  contract,
 *  tokenId: ...,
 *  uri: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
function setTokenURI(options) {
    return (0, prepare_contract_call_js_1.prepareContractCall)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: "asyncParams" in options
            ? async () => {
                const resolvedParams = await options.asyncParams();
                return [resolvedParams.tokenId, resolvedParams.uri];
            }
            : [options.tokenId, options.uri],
    });
}
exports.setTokenURI = setTokenURI;
//# sourceMappingURL=setTokenURI.js.map