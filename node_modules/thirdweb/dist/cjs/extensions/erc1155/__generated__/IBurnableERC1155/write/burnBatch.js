"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.burnBatch = exports.encodeBurnBatchParams = void 0;
const prepare_contract_call_js_1 = require("../../../../../transaction/prepare-contract-call.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const FN_SELECTOR = "0x6b20c454";
const FN_INPUTS = [
    {
        type: "address",
        name: "account",
    },
    {
        type: "uint256[]",
        name: "ids",
    },
    {
        type: "uint256[]",
        name: "values",
    },
];
const FN_OUTPUTS = [];
/**
 * Encodes the parameters for the "burnBatch" function.
 * @param options - The options for the burnBatch function.
 * @returns The encoded ABI parameters.
 * @extension ERC1155
 * @example
 * ```
 * import { encodeBurnBatchParams } "thirdweb/extensions/erc1155";
 * const result = encodeBurnBatchParams({
 *  account: ...,
 *  ids: ...,
 *  values: ...,
 * });
 * ```
 */
function encodeBurnBatchParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [
        options.account,
        options.ids,
        options.values,
    ]);
}
exports.encodeBurnBatchParams = encodeBurnBatchParams;
/**
 * Calls the "burnBatch" function on the contract.
 * @param options - The options for the "burnBatch" function.
 * @returns A prepared transaction object.
 * @extension ERC1155
 * @example
 * ```
 * import { burnBatch } from "thirdweb/extensions/erc1155";
 *
 * const transaction = burnBatch({
 *  account: ...,
 *  ids: ...,
 *  values: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
function burnBatch(options) {
    return (0, prepare_contract_call_js_1.prepareContractCall)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: "asyncParams" in options
            ? async () => {
                const resolvedParams = await options.asyncParams();
                return [
                    resolvedParams.account,
                    resolvedParams.ids,
                    resolvedParams.values,
                ];
            }
            : [options.account, options.ids, options.values],
    });
}
exports.burnBatch = burnBatch;
//# sourceMappingURL=burnBatch.js.map