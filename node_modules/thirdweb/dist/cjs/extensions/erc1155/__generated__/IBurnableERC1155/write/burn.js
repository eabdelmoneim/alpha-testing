"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.burn = exports.encodeBurnParams = void 0;
const prepare_contract_call_js_1 = require("../../../../../transaction/prepare-contract-call.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const FN_SELECTOR = "0xf5298aca";
const FN_INPUTS = [
    {
        type: "address",
        name: "account",
    },
    {
        type: "uint256",
        name: "id",
    },
    {
        type: "uint256",
        name: "value",
    },
];
const FN_OUTPUTS = [];
/**
 * Encodes the parameters for the "burn" function.
 * @param options - The options for the burn function.
 * @returns The encoded ABI parameters.
 * @extension ERC1155
 * @example
 * ```ts
 * import { encodeBurnParams } "thirdweb/extensions/erc1155";
 * const result = encodeBurnParams({
 *  account: ...,
 *  id: ...,
 *  value: ...,
 * });
 * ```
 */
function encodeBurnParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [
        options.account,
        options.id,
        options.value,
    ]);
}
exports.encodeBurnParams = encodeBurnParams;
/**
 * Calls the "burn" function on the contract.
 * @param options - The options for the "burn" function.
 * @returns A prepared transaction object.
 * @extension ERC1155
 * @example
 * ```ts
 * import { burn } from "thirdweb/extensions/erc1155";
 *
 * const transaction = burn({
 *  contract,
 *  account: ...,
 *  id: ...,
 *  value: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
function burn(options) {
    return (0, prepare_contract_call_js_1.prepareContractCall)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: "asyncParams" in options
            ? async () => {
                const resolvedParams = await options.asyncParams();
                return [
                    resolvedParams.account,
                    resolvedParams.id,
                    resolvedParams.value,
                ];
            }
            : [options.account, options.id, options.value],
    });
}
exports.burn = burn;
//# sourceMappingURL=burn.js.map