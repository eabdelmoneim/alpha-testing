"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.accountImplementation = exports.decodeAccountImplementationResult = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const viem_1 = require("viem");
const FN_SELECTOR = "0x11464fbe";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "address",
    },
];
/**
 * Decodes the result of the accountImplementation function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC4337
 * @example
 * ```ts
 * import { decodeAccountImplementationResult } from "thirdweb/extensions/erc4337";
 * const result = decodeAccountImplementationResult("...");
 * ```
 */
function decodeAccountImplementationResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result)[0];
}
exports.decodeAccountImplementationResult = decodeAccountImplementationResult;
/**
 * Calls the "accountImplementation" function on the contract.
 * @param options - The options for the accountImplementation function.
 * @returns The parsed result of the function call.
 * @extension ERC4337
 * @example
 * ```ts
 * import { accountImplementation } from "thirdweb/extensions/erc4337";
 *
 * const result = await accountImplementation();
 *
 * ```
 */
async function accountImplementation(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [],
    });
}
exports.accountImplementation = accountImplementation;
//# sourceMappingURL=accountImplementation.js.map