"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.onSignerAdded = exports.encodeOnSignerAddedParams = void 0;
const prepare_contract_call_js_1 = require("../../../../../transaction/prepare-contract-call.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const FN_SELECTOR = "0x9ddbb9d8";
const FN_INPUTS = [
    {
        type: "address",
        name: "signer",
    },
    {
        type: "address",
        name: "creatorAdmin",
    },
    {
        type: "bytes",
        name: "data",
    },
];
const FN_OUTPUTS = [];
/**
 * Encodes the parameters for the "onSignerAdded" function.
 * @param options - The options for the onSignerAdded function.
 * @returns The encoded ABI parameters.
 * @extension ERC4337
 * @example
 * ```ts
 * import { encodeOnSignerAddedParams } "thirdweb/extensions/erc4337";
 * const result = encodeOnSignerAddedParams({
 *  signer: ...,
 *  creatorAdmin: ...,
 *  data: ...,
 * });
 * ```
 */
function encodeOnSignerAddedParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [
        options.signer,
        options.creatorAdmin,
        options.data,
    ]);
}
exports.encodeOnSignerAddedParams = encodeOnSignerAddedParams;
/**
 * Calls the "onSignerAdded" function on the contract.
 * @param options - The options for the "onSignerAdded" function.
 * @returns A prepared transaction object.
 * @extension ERC4337
 * @example
 * ```ts
 * import { onSignerAdded } from "thirdweb/extensions/erc4337";
 *
 * const transaction = onSignerAdded({
 *  contract,
 *  signer: ...,
 *  creatorAdmin: ...,
 *  data: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
function onSignerAdded(options) {
    return (0, prepare_contract_call_js_1.prepareContractCall)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: "asyncParams" in options
            ? async () => {
                const resolvedParams = await options.asyncParams();
                return [
                    resolvedParams.signer,
                    resolvedParams.creatorAdmin,
                    resolvedParams.data,
                ];
            }
            : [options.signer, options.creatorAdmin, options.data],
    });
}
exports.onSignerAdded = onSignerAdded;
//# sourceMappingURL=onSignerAdded.js.map