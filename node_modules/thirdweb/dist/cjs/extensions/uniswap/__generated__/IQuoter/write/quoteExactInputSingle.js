"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.quoteExactInputSingle = exports.encodeQuoteExactInputSingleParams = void 0;
const prepare_contract_call_js_1 = require("../../../../../transaction/prepare-contract-call.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const FN_SELECTOR = "0xf7729d43";
const FN_INPUTS = [
    {
        type: "address",
        name: "tokenIn",
    },
    {
        type: "address",
        name: "tokenOut",
    },
    {
        type: "uint24",
        name: "fee",
    },
    {
        type: "uint256",
        name: "amountIn",
    },
    {
        type: "uint160",
        name: "sqrtPriceLimitX96",
    },
];
const FN_OUTPUTS = [
    {
        type: "uint256",
        name: "amountOut",
    },
];
/**
 * Encodes the parameters for the "quoteExactInputSingle" function.
 * @param options - The options for the quoteExactInputSingle function.
 * @returns The encoded ABI parameters.
 * @extension UNISWAP
 * @example
 * ```
 * import { encodeQuoteExactInputSingleParams } "thirdweb/extensions/uniswap";
 * const result = encodeQuoteExactInputSingleParams({
 *  tokenIn: ...,
 *  tokenOut: ...,
 *  fee: ...,
 *  amountIn: ...,
 *  sqrtPriceLimitX96: ...,
 * });
 * ```
 */
function encodeQuoteExactInputSingleParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [
        options.tokenIn,
        options.tokenOut,
        options.fee,
        options.amountIn,
        options.sqrtPriceLimitX96,
    ]);
}
exports.encodeQuoteExactInputSingleParams = encodeQuoteExactInputSingleParams;
/**
 * Calls the "quoteExactInputSingle" function on the contract.
 * @param options - The options for the "quoteExactInputSingle" function.
 * @returns A prepared transaction object.
 * @extension UNISWAP
 * @example
 * ```
 * import { quoteExactInputSingle } from "thirdweb/extensions/uniswap";
 *
 * const transaction = quoteExactInputSingle({
 *  tokenIn: ...,
 *  tokenOut: ...,
 *  fee: ...,
 *  amountIn: ...,
 *  sqrtPriceLimitX96: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
function quoteExactInputSingle(options) {
    return (0, prepare_contract_call_js_1.prepareContractCall)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: "asyncParams" in options
            ? async () => {
                const resolvedParams = await options.asyncParams();
                return [
                    resolvedParams.tokenIn,
                    resolvedParams.tokenOut,
                    resolvedParams.fee,
                    resolvedParams.amountIn,
                    resolvedParams.sqrtPriceLimitX96,
                ];
            }
            : [
                options.tokenIn,
                options.tokenOut,
                options.fee,
                options.amountIn,
                options.sqrtPriceLimitX96,
            ],
    });
}
exports.quoteExactInputSingle = quoteExactInputSingle;
//# sourceMappingURL=quoteExactInputSingle.js.map