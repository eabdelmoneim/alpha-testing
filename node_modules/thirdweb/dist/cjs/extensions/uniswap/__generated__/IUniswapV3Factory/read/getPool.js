"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPool = exports.decodeGetPoolResult = exports.encodeGetPoolParams = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const viem_1 = require("viem");
const FN_SELECTOR = "0x1698ee82";
const FN_INPUTS = [
    {
        type: "address",
        name: "tokenA",
    },
    {
        type: "address",
        name: "tokenB",
    },
    {
        type: "uint24",
        name: "fee",
    },
];
const FN_OUTPUTS = [
    {
        type: "address",
        name: "pool",
    },
];
/**
 * Encodes the parameters for the "getPool" function.
 * @param options - The options for the getPool function.
 * @returns The encoded ABI parameters.
 * @extension UNISWAP
 * @example
 * ```
 * import { encodeGetPoolParams } "thirdweb/extensions/uniswap";
 * const result = encodeGetPoolParams({
 *  tokenA: ...,
 *  tokenB: ...,
 *  fee: ...,
 * });
 * ```
 */
function encodeGetPoolParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [
        options.tokenA,
        options.tokenB,
        options.fee,
    ]);
}
exports.encodeGetPoolParams = encodeGetPoolParams;
/**
 * Decodes the result of the getPool function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension UNISWAP
 * @example
 * ```
 * import { decodeGetPoolResult } from "thirdweb/extensions/uniswap";
 * const result = decodeGetPoolResult("...");
 * ```
 */
function decodeGetPoolResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result)[0];
}
exports.decodeGetPoolResult = decodeGetPoolResult;
/**
 * Calls the "getPool" function on the contract.
 * @param options - The options for the getPool function.
 * @returns The parsed result of the function call.
 * @extension UNISWAP
 * @example
 * ```
 * import { getPool } from "thirdweb/extensions/uniswap";
 *
 * const result = await getPool({
 *  tokenA: ...,
 *  tokenB: ...,
 *  fee: ...,
 * });
 *
 * ```
 */
async function getPool(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [options.tokenA, options.tokenB, options.fee],
    });
}
exports.getPool = getPool;
//# sourceMappingURL=getPool.js.map