"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.isNewWinningBid = exports.decodeIsNewWinningBidResult = exports.encodeIsNewWinningBidParams = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const viem_1 = require("viem");
const FN_SELECTOR = "0x2eb566bd";
const FN_INPUTS = [
    {
        type: "uint256",
        name: "_auctionId",
    },
    {
        type: "uint256",
        name: "_bidAmount",
    },
];
const FN_OUTPUTS = [
    {
        type: "bool",
    },
];
/**
 * Encodes the parameters for the "isNewWinningBid" function.
 * @param options - The options for the isNewWinningBid function.
 * @returns The encoded ABI parameters.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { encodeIsNewWinningBidParams } "thirdweb/extensions/marketplace";
 * const result = encodeIsNewWinningBidParams({
 *  auctionId: ...,
 *  bidAmount: ...,
 * });
 * ```
 */
function encodeIsNewWinningBidParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [options.auctionId, options.bidAmount]);
}
exports.encodeIsNewWinningBidParams = encodeIsNewWinningBidParams;
/**
 * Decodes the result of the isNewWinningBid function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { decodeIsNewWinningBidResult } from "thirdweb/extensions/marketplace";
 * const result = decodeIsNewWinningBidResult("...");
 * ```
 */
function decodeIsNewWinningBidResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result)[0];
}
exports.decodeIsNewWinningBidResult = decodeIsNewWinningBidResult;
/**
 * Calls the "isNewWinningBid" function on the contract.
 * @param options - The options for the isNewWinningBid function.
 * @returns The parsed result of the function call.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { isNewWinningBid } from "thirdweb/extensions/marketplace";
 *
 * const result = await isNewWinningBid({
 *  auctionId: ...,
 *  bidAmount: ...,
 * });
 *
 * ```
 */
async function isNewWinningBid(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [options.auctionId, options.bidAmount],
    });
}
exports.isNewWinningBid = isNewWinningBid;
//# sourceMappingURL=isNewWinningBid.js.map