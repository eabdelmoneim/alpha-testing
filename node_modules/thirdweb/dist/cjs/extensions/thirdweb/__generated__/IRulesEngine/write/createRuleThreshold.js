"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createRuleThreshold = exports.encodeCreateRuleThresholdParams = void 0;
const prepare_contract_call_js_1 = require("../../../../../transaction/prepare-contract-call.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const FN_SELECTOR = "0x1022a25e";
const FN_INPUTS = [
    {
        type: "tuple",
        name: "rule",
        components: [
            {
                type: "address",
                name: "token",
            },
            {
                type: "uint8",
                name: "tokenType",
            },
            {
                type: "uint256",
                name: "tokenId",
            },
            {
                type: "uint256",
                name: "balance",
            },
            {
                type: "uint256",
                name: "score",
            },
        ],
    },
];
const FN_OUTPUTS = [
    {
        type: "bytes32",
        name: "ruleId",
    },
];
/**
 * Encodes the parameters for the "createRuleThreshold" function.
 * @param options - The options for the createRuleThreshold function.
 * @returns The encoded ABI parameters.
 * @extension THIRDWEB
 * @example
 * ```ts
 * import { encodeCreateRuleThresholdParams } "thirdweb/extensions/thirdweb";
 * const result = encodeCreateRuleThresholdParams({
 *  rule: ...,
 * });
 * ```
 */
function encodeCreateRuleThresholdParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [options.rule]);
}
exports.encodeCreateRuleThresholdParams = encodeCreateRuleThresholdParams;
/**
 * Calls the "createRuleThreshold" function on the contract.
 * @param options - The options for the "createRuleThreshold" function.
 * @returns A prepared transaction object.
 * @extension THIRDWEB
 * @example
 * ```ts
 * import { createRuleThreshold } from "thirdweb/extensions/thirdweb";
 *
 * const transaction = createRuleThreshold({
 *  contract,
 *  rule: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
function createRuleThreshold(options) {
    return (0, prepare_contract_call_js_1.prepareContractCall)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: "asyncParams" in options
            ? async () => {
                const resolvedParams = await options.asyncParams();
                return [resolvedParams.rule];
            }
            : [options.rule],
    });
}
exports.createRuleThreshold = createRuleThreshold;
//# sourceMappingURL=createRuleThreshold.js.map