"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getActiveClaimConditionId = exports.decodeGetActiveClaimConditionIdResult = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const viem_1 = require("viem");
const FN_SELECTOR = "0xc68907de";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "uint256",
    },
];
/**
 * Decodes the result of the getActiveClaimConditionId function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC721
 * @example
 * ```ts
 * import { decodeGetActiveClaimConditionIdResult } from "thirdweb/extensions/erc721";
 * const result = decodeGetActiveClaimConditionIdResult("...");
 * ```
 */
function decodeGetActiveClaimConditionIdResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result)[0];
}
exports.decodeGetActiveClaimConditionIdResult = decodeGetActiveClaimConditionIdResult;
/**
 * Calls the "getActiveClaimConditionId" function on the contract.
 * @param options - The options for the getActiveClaimConditionId function.
 * @returns The parsed result of the function call.
 * @extension ERC721
 * @example
 * ```ts
 * import { getActiveClaimConditionId } from "thirdweb/extensions/erc721";
 *
 * const result = await getActiveClaimConditionId();
 *
 * ```
 */
async function getActiveClaimConditionId(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [],
    });
}
exports.getActiveClaimConditionId = getActiveClaimConditionId;
//# sourceMappingURL=getActiveClaimConditionId.js.map