"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTotalClaimedSupply = void 0;
const nextTokenIdToClaim_js_1 = require("../__generated__/IDrop/read/nextTokenIdToClaim.js");
const totalMinted_js_1 = require("../__generated__/ISignatureDropERC721/read/totalMinted.js");
/**
 * Retrieves the total claimed supply of ERC721 tokens.
 * @param options - The base transaction options.
 * @returns A promise that resolves to the total claimed supply as a bigint.
 * @throws An error if the total claimed supply cannot be retrieved.
 * @extension ERC721
 * @example
 *
 * ```ts
 * import { getTotalClaimedSupply } from "thirdweb/extensions/erc721";
 *
 * const totalClaimedSupply = await getTotalClaimedSupply({
 *  contract,
 * });
 * ```
 */
async function getTotalClaimedSupply(options) {
    const results = await Promise.allSettled([
        (0, totalMinted_js_1.totalMinted)(options),
        (0, nextTokenIdToClaim_js_1.nextTokenIdToClaim)(options),
    ]);
    for (const result of results) {
        if (result.status === "fulfilled") {
            return result.value;
        }
    }
    throw new Error("Failed to get total claimed supply");
}
exports.getTotalClaimedSupply = getTotalClaimedSupply;
//# sourceMappingURL=getTotalClaimedSupply.js.map