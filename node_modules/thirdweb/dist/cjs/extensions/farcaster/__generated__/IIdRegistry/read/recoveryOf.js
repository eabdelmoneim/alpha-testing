"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.recoveryOf = exports.decodeRecoveryOfResult = exports.encodeRecoveryOfParams = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const viem_1 = require("viem");
const FN_SELECTOR = "0xfa1a1b25";
const FN_INPUTS = [
    {
        type: "uint256",
        name: "fid",
    },
];
const FN_OUTPUTS = [
    {
        type: "address",
        name: "recovery",
    },
];
/**
 * Encodes the parameters for the "recoveryOf" function.
 * @param options - The options for the recoveryOf function.
 * @returns The encoded ABI parameters.
 * @extension FARCASTER
 * @example
 * ```
 * import { encodeRecoveryOfParams } "thirdweb/extensions/farcaster";
 * const result = encodeRecoveryOfParams({
 *  fid: ...,
 * });
 * ```
 */
function encodeRecoveryOfParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [options.fid]);
}
exports.encodeRecoveryOfParams = encodeRecoveryOfParams;
/**
 * Decodes the result of the recoveryOf function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension FARCASTER
 * @example
 * ```
 * import { decodeRecoveryOfResult } from "thirdweb/extensions/farcaster";
 * const result = decodeRecoveryOfResult("...");
 * ```
 */
function decodeRecoveryOfResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result)[0];
}
exports.decodeRecoveryOfResult = decodeRecoveryOfResult;
/**
 * Calls the "recoveryOf" function on the contract.
 * @param options - The options for the recoveryOf function.
 * @returns The parsed result of the function call.
 * @extension FARCASTER
 * @example
 * ```
 * import { recoveryOf } from "thirdweb/extensions/farcaster";
 *
 * const result = await recoveryOf({
 *  fid: ...,
 * });
 *
 * ```
 */
async function recoveryOf(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [options.fid],
    });
}
exports.recoveryOf = recoveryOf;
//# sourceMappingURL=recoveryOf.js.map