"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.deprecationTimestamp = exports.decodeDeprecationTimestampResult = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const viem_1 = require("viem");
const FN_SELECTOR = "0x2c39d670";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "uint256",
    },
];
/**
 * Decodes the result of the deprecationTimestamp function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension FARCASTER
 * @example
 * ```
 * import { decodeDeprecationTimestampResult } from "thirdweb/extensions/farcaster";
 * const result = decodeDeprecationTimestampResult("...");
 * ```
 */
function decodeDeprecationTimestampResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result)[0];
}
exports.decodeDeprecationTimestampResult = decodeDeprecationTimestampResult;
/**
 * Calls the "deprecationTimestamp" function on the contract.
 * @param options - The options for the deprecationTimestamp function.
 * @returns The parsed result of the function call.
 * @extension FARCASTER
 * @example
 * ```
 * import { deprecationTimestamp } from "thirdweb/extensions/farcaster";
 *
 * const result = await deprecationTimestamp();
 *
 * ```
 */
async function deprecationTimestamp(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [],
    });
}
exports.deprecationTimestamp = deprecationTimestamp;
//# sourceMappingURL=deprecationTimestamp.js.map