"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.maxKeysPerFid = exports.decodeMaxKeysPerFidResult = void 0;
const read_contract_js_1 = require("../../../../../transaction/read-contract.js");
const viem_1 = require("viem");
const FN_SELECTOR = "0xe33acf38";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "uint256",
    },
];
/**
 * Decodes the result of the maxKeysPerFid function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension FARCASTER
 * @example
 * ```ts
 * import { decodeMaxKeysPerFidResult } from "thirdweb/extensions/farcaster";
 * const result = decodeMaxKeysPerFidResult("...");
 * ```
 */
function decodeMaxKeysPerFidResult(result) {
    return (0, viem_1.decodeAbiParameters)(FN_OUTPUTS, result)[0];
}
exports.decodeMaxKeysPerFidResult = decodeMaxKeysPerFidResult;
/**
 * Calls the "maxKeysPerFid" function on the contract.
 * @param options - The options for the maxKeysPerFid function.
 * @returns The parsed result of the function call.
 * @extension FARCASTER
 * @example
 * ```ts
 * import { maxKeysPerFid } from "thirdweb/extensions/farcaster";
 *
 * const result = await maxKeysPerFid();
 *
 * ```
 */
async function maxKeysPerFid(options) {
    return (0, read_contract_js_1.readContract)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [],
    });
}
exports.maxKeysPerFid = maxKeysPerFid;
//# sourceMappingURL=maxKeysPerFid.js.map