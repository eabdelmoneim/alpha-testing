"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.withdrawRewardTokens = exports.encodeWithdrawRewardTokensParams = void 0;
const prepare_contract_call_js_1 = require("../../../../../transaction/prepare-contract-call.js");
const encodeAbiParameters_js_1 = require("../../../../../utils/abi/encodeAbiParameters.js");
const FN_SELECTOR = "0xcb43b2dd";
const FN_INPUTS = [
    {
        type: "uint256",
        name: "_amount",
    },
];
const FN_OUTPUTS = [];
/**
 * Encodes the parameters for the "withdrawRewardTokens" function.
 * @param options - The options for the withdrawRewardTokens function.
 * @returns The encoded ABI parameters.
 * @extension ERC20
 * @example
 * ```ts
 * import { encodeWithdrawRewardTokensParams } "thirdweb/extensions/erc20";
 * const result = encodeWithdrawRewardTokensParams({
 *  amount: ...,
 * });
 * ```
 */
function encodeWithdrawRewardTokensParams(options) {
    return (0, encodeAbiParameters_js_1.encodeAbiParameters)(FN_INPUTS, [options.amount]);
}
exports.encodeWithdrawRewardTokensParams = encodeWithdrawRewardTokensParams;
/**
 * Calls the "withdrawRewardTokens" function on the contract.
 * @param options - The options for the "withdrawRewardTokens" function.
 * @returns A prepared transaction object.
 * @extension ERC20
 * @example
 * ```ts
 * import { withdrawRewardTokens } from "thirdweb/extensions/erc20";
 *
 * const transaction = withdrawRewardTokens({
 *  contract,
 *  amount: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
function withdrawRewardTokens(options) {
    return (0, prepare_contract_call_js_1.prepareContractCall)({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: "asyncParams" in options
            ? async () => {
                const resolvedParams = await options.asyncParams();
                return [resolvedParams.amount];
            }
            : [options.amount],
    });
}
exports.withdrawRewardTokens = withdrawRewardTokens;
//# sourceMappingURL=withdrawRewardTokens.js.map