"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PayWithCrypto = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_icons_1 = require("@radix-ui/react-icons");
const useChainQuery_js_1 = require("../../../../../../core/hooks/others/useChainQuery.js");
const useWalletBalance_js_1 = require("../../../../../../core/hooks/others/useWalletBalance.js");
const wallet_hooks_js_1 = require("../../../../../../core/hooks/wallets/wallet-hooks.js");
const Skeleton_js_1 = require("../../../../components/Skeleton.js");
const basic_js_1 = require("../../../../components/basic.js");
const buttons_js_1 = require("../../../../components/buttons.js");
const CustomThemeProvider_js_1 = require("../../../../design-system/CustomThemeProvider.js");
const elements_js_1 = require("../../../../design-system/elements.js");
const index_js_1 = require("../../../../design-system/index.js");
const TokenSelector_js_1 = require("../../TokenSelector.js");
const text_js_1 = require("../../../../components/text.js");
const nativeToken_js_1 = require("../../nativeToken.js");
const TokenSelector_js_2 = require("./TokenSelector.js");
const ChainIcon_js_1 = require("../../../../components/ChainIcon.js");
const WalletIcon_js_1 = require("../../../icons/WalletIcon.js");
const formatNumber_js_1 = require("../../../../../../../utils/formatNumber.js");
/**
 * Shows an amount "value" and renders the selected token and chain
 * It also renders the buttons to select the token and chain
 * It also renders the balance of active wallet for the selected token in selected chain
 * @internal
 */
function PayWithCrypto(props) {
    const chainQuery = (0, useChainQuery_js_1.useChainQuery)(props.chain);
    const activeAccount = (0, wallet_hooks_js_1.useActiveAccount)();
    const balanceQuery = (0, useWalletBalance_js_1.useWalletBalance)({
        address: activeAccount?.address,
        chain: props.chain,
        tokenAddress: (0, nativeToken_js_1.isNativeToken)(props.token) ? undefined : props.token.address,
    });
    return ((0, jsx_runtime_1.jsx)("div", { children: (0, jsx_runtime_1.jsxs)(BorderBox, { children: [(0, jsx_runtime_1.jsxs)(basic_js_1.Container, { px: "sm", flex: "row", style: {
                        flexWrap: "nowrap",
                        justifyContent: "space-between",
                    }, children: [(0, jsx_runtime_1.jsx)(TokenSelector_js_2.TokenSelectorButton, { onClick: props.onTokenClick, style: {
                                border: "none",
                                paddingInline: 0,
                            }, token: props.token, chain: props.chain }), (0, jsx_runtime_1.jsx)("div", { style: {
                                flexGrow: 1,
                                flexShrink: 1,
                                display: "flex",
                                alignItems: "center",
                                overflow: "hidden",
                                textOverflow: "ellipsis",
                                whiteSpace: "nowrap",
                                justifyContent: "flex-end",
                            }, children: props.isLoading ? ((0, jsx_runtime_1.jsx)(Skeleton_js_1.Skeleton, { width: "120px", height: index_js_1.fontSize.md })) : ((0, jsx_runtime_1.jsx)(text_js_1.Text, { size: "lg", color: props.value ? "primaryText" : "secondaryText", style: {}, children: (0, formatNumber_js_1.formatNumber)(Number(props.value), 4) || "--" })) })] }), (0, jsx_runtime_1.jsx)(basic_js_1.Line, {}), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "row", px: "sm", center: "y", children: [(0, jsx_runtime_1.jsx)(basic_js_1.Container, { flex: "row", style: {
                                flexGrow: 1,
                                flexWrap: "nowrap",
                            }, children: (0, jsx_runtime_1.jsxs)(buttons_js_1.Button, { variant: "outline", style: {
                                    fontSize: index_js_1.fontSize.sm,
                                    border: "none",
                                    paddingInline: 0,
                                    paddingBlock: index_js_1.spacing.sm,
                                }, gap: "xs", onClick: props.onChainClick, children: [(0, jsx_runtime_1.jsx)(ChainIcon_js_1.ChainIcon, { chain: chainQuery.data, size: index_js_1.iconSize.sm }), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { color: "secondaryText", flex: "row", center: "y", gap: "xxs", children: [chainQuery.data?.name ? ((0, jsx_runtime_1.jsx)(text_js_1.Text, { color: "secondaryText", size: "sm", children: chainQuery.data.name })) : ((0, jsx_runtime_1.jsx)(Skeleton_js_1.Skeleton, { width: "90px", height: index_js_1.fontSize.xs })), (0, jsx_runtime_1.jsx)(react_icons_1.ChevronDownIcon, { width: index_js_1.iconSize.sm, height: index_js_1.iconSize.sm })] })] }) }), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "row", gap: "xxs", center: "y", color: "secondaryText", children: [(0, jsx_runtime_1.jsx)(WalletIcon_js_1.WalletIcon, { size: index_js_1.iconSize.xs }), balanceQuery.data ? ((0, jsx_runtime_1.jsx)(text_js_1.Text, { size: "xs", color: "secondaryText", children: (0, TokenSelector_js_1.formatTokenBalance)(balanceQuery.data, true) })) : ((0, jsx_runtime_1.jsx)(Skeleton_js_1.Skeleton, { width: "70px", height: index_js_1.fontSize.xs }))] })] })] }) }));
}
exports.PayWithCrypto = PayWithCrypto;
const BorderBox = /* @__PURE__ */ (0, elements_js_1.StyledDiv)(() => {
    const theme = (0, CustomThemeProvider_js_1.useCustomTheme)();
    return {
        border: `1px solid ${theme.colors.borderColor}`,
        borderRadius: index_js_1.radius.lg,
    };
});
//# sourceMappingURL=PayWithCrypto.js.map