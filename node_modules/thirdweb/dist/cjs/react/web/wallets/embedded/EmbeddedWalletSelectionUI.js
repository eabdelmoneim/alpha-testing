"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const screen_js_1 = require("../../ui/ConnectWallet/Modal/screen.js");
const constants_js_1 = require("../../ui/ConnectWallet/constants.js");
const LoadingScreen_js_1 = require("../shared/LoadingScreen.js");
const EmbeddedWalletFormUI_js_1 = require("./EmbeddedWalletFormUI.js");
const useEmbeddedWalletLocale_js_1 = require("./useEmbeddedWalletLocale.js");
const react_1 = require("react");
const wallet_ui_states_provider_js_1 = require("../../providers/wallet-ui-states-provider.js");
const WalletEntryButton_js_1 = require("../../ui/ConnectWallet/WalletEntryButton.js");
/**
 *
 * @internal
 */
function EmbeddedWalletSelectionUI(props) {
    const { screen } = (0, screen_js_1.useScreenContext)();
    const { modalSize } = (0, react_1.useContext)(wallet_ui_states_provider_js_1.ModalConfigCtx);
    const locale = (0, useEmbeddedWalletLocale_js_1.useEmbeddedWalletLocale)();
    const setModalConfig = (0, react_1.useContext)(wallet_ui_states_provider_js_1.SetModalConfigCtx);
    function saveState(data) {
        setModalConfig((p) => ({
            ...p,
            data,
        }));
    }
    // do not show the "selectUI" if
    // modal is compact or
    // it is being rendered in Safe wallet
    if (modalSize === "wide" ||
        (screen !== constants_js_1.reservedScreens.main && modalSize === "compact")) {
        return ((0, jsx_runtime_1.jsx)(WalletEntryButton_js_1.WalletEntryButton, { wallet: props.wallet, selectWallet: () => {
                saveState({});
                props.select();
            } }));
    }
    if (!locale) {
        return (0, jsx_runtime_1.jsx)(LoadingScreen_js_1.LoadingScreen, { height: "300px" });
    }
    return ((0, jsx_runtime_1.jsx)(EmbeddedWalletFormUI_js_1.EmbeddedWalletFormUI, { locale: locale, wallet: props.wallet, done: props.done, select: props.select, goBack: props.goBack }));
}
exports.default = EmbeddedWalletSelectionUI;
//# sourceMappingURL=EmbeddedWalletSelectionUI.js.map