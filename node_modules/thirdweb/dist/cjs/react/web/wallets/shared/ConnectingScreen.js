"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConnectingScreen = void 0;
const jsx_runtime_1 = require("react/jsx-runtime");
const react_icons_1 = require("@radix-ui/react-icons");
const react_1 = require("react");
const wallet_ui_states_provider_js_1 = require("../../providers/wallet-ui-states-provider.js");
const Spacer_js_1 = require("../../ui/components/Spacer.js");
const basic_js_1 = require("../../ui/components/basic.js");
const buttons_js_1 = require("../../ui/components/buttons.js");
const index_js_1 = require("../../ui/design-system/index.js");
const WalletLogoSpinner_js_1 = require("../../ui/ConnectWallet/screens/WalletLogoSpinner.js");
const text_js_1 = require("../../ui/components/text.js");
/**
 * @internal
 */
const ConnectingScreen = (props) => {
    const { locale } = props;
    const modalConfig = (0, react_1.useContext)(wallet_ui_states_provider_js_1.ModalConfigCtx);
    return ((0, jsx_runtime_1.jsxs)(basic_js_1.Container, { animate: "fadein", fullHeight: true, flex: "column", children: [(0, jsx_runtime_1.jsx)(basic_js_1.Container, { p: "lg", style: {
                    paddingBottom: 0,
                }, children: (0, jsx_runtime_1.jsx)(basic_js_1.ModalHeader, { title: props.walletName, onBack: props.onBack }) }), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { flex: "column", center: "y", expand: true, px: modalConfig.modalSize === "compact" ? "lg" : "xxl", relative: true, style: {
                    paddingTop: 0,
                }, children: [(0, jsx_runtime_1.jsx)(basic_js_1.Container, { py: "3xl", children: (0, jsx_runtime_1.jsx)(WalletLogoSpinner_js_1.WalletLogoSpinner, { error: props.errorConnecting, id: props.walletId }) }), (0, jsx_runtime_1.jsxs)(basic_js_1.Container, { animate: "fadein", style: {
                            animationDuration: "200ms",
                        }, children: [(0, jsx_runtime_1.jsx)(text_js_1.Text, { center: true, color: "primaryText", size: "lg", weight: 600, children: props.errorConnecting ? locale.failed : locale.inProgress }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "md" }), !props.errorConnecting ? ((0, jsx_runtime_1.jsx)(text_js_1.Text, { balance: true, center: true, multiline: true, children: locale.instruction })) : ((0, jsx_runtime_1.jsx)(basic_js_1.Container, { flex: "row", center: "x", animate: "fadein", children: (0, jsx_runtime_1.jsxs)(buttons_js_1.Button, { fullWidth: true, variant: "accent", onClick: props.onRetry, style: {
                                        gap: index_js_1.spacing.xs,
                                        alignItems: "center",
                                    }, children: [(0, jsx_runtime_1.jsx)(react_icons_1.ReloadIcon, { width: index_js_1.iconSize.sm, height: index_js_1.iconSize.sm }), " ", locale.tryAgain] }) }))] })] }), (0, jsx_runtime_1.jsx)(Spacer_js_1.Spacer, { y: "xl" }), (0, jsx_runtime_1.jsx)(basic_js_1.Line, {}), (0, jsx_runtime_1.jsx)(basic_js_1.Container, { flex: "row", center: "x", p: "lg", children: (0, jsx_runtime_1.jsx)(buttons_js_1.Button, { variant: "link", onClick: props.onGetStarted, children: locale.getStartedLink }) })] }));
};
exports.ConnectingScreen = ConnectingScreen;
//# sourceMappingURL=ConnectingScreen.js.map