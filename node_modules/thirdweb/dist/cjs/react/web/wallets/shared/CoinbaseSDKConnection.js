"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const useWalletConnectionCtx_js_1 = require("../../../core/hooks/others/useWalletConnectionCtx.js");
const react_1 = require("react");
const ScanScreen_js_1 = require("./ScanScreen.js");
/**
 * @internal
 */
function CoinbaseSDKWalletConnectUI(props) {
    const { onBack, done, wallet, walletInfo, onGetStarted, locale } = props;
    const [qrCodeUri, setQrCodeUri] = (0, react_1.useState)();
    const { client, chain } = (0, useWalletConnectionCtx_js_1.useWalletConnectionCtx)();
    const connect = (0, react_1.useCallback)(() => {
        wallet
            .connect({
            client,
            chain,
            onUri: (uri) => {
                setQrCodeUri(uri);
            },
            headlessMode: true,
            reloadOnDisconnect: false,
        })
            .then(() => {
            done();
        })
            .catch((e) => {
            console.error(e);
        });
    }, [client, wallet, chain, done]);
    const scanStarted = (0, react_1.useRef)(false);
    (0, react_1.useEffect)(() => {
        if (scanStarted.current) {
            return;
        }
        scanStarted.current = true;
        connect();
    }, [connect]);
    return ((0, jsx_runtime_1.jsx)(ScanScreen_js_1.ScanScreen, { qrScanInstruction: locale.scanScreen.instruction, onBack: onBack, onGetStarted: onGetStarted, qrCodeUri: qrCodeUri, walletName: walletInfo.name, walletId: "com.coinbase.wallet", getStartedLink: locale.getStartedLink }));
}
exports.default = CoinbaseSDKWalletConnectUI;
//# sourceMappingURL=CoinbaseSDKConnection.js.map