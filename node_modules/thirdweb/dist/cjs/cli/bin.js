#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable better-tree-shaking/no-top-level-side-effects */
const node_child_process_1 = require("node:child_process");
const generate_js_1 = require("./commands/generate/generate.js");
// skip the first two args?
const [, , command = "", ...rest] = process.argv;
async function main() {
    switch (command) {
        case "generate": {
            const [chainIdPlusContract] = rest;
            if (!(0, generate_js_1.isValidChainIdAndContractAddress)(chainIdPlusContract)) {
                console.info("Usage: thirdweb generate <chainId>/<contractAddress>");
                process.exit(1);
            }
            else {
                await (0, generate_js_1.generate)(chainIdPlusContract);
            }
            break;
        }
        default: {
            let bunAvailable = false;
            try {
                const res = (0, node_child_process_1.execSync)("bun --version", {
                    stdio: "ignore",
                    encoding: "utf-8",
                });
                if (typeof res === "string" && res.indexOf(".") > -1) {
                    bunAvailable = true;
                }
            }
            catch {
                bunAvailable = false;
            }
            const runner = bunAvailable ? "bunx" : "npx";
            // eslint-disable-next-line better-tree-shaking/no-top-level-side-effects
            (0, node_child_process_1.spawn)(runner, ["--yes", "@thirdweb-dev/cli@beta", command, ...rest], {
                stdio: "inherit",
            });
        }
    }
}
main();
//# sourceMappingURL=bin.js.map