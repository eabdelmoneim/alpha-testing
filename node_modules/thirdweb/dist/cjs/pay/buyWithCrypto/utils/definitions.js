"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getPayChainsEndpoint = exports.getPayBuyWithCryptoHistoryEndpoint = exports.getPayBuyWithCryptoQuoteEndpoint = exports.getPayBuyWithCryptoStatusUrl = void 0;
const domains_js_1 = require("../../../utils/domains.js");
/**
 * Constructs the endpoint to get the status of a quote.
 * @param client - The Thirdweb client containing the baseUrl config
 * @internal
 */
const getPayBuyWithCryptoStatusUrl = () => `https://${(0, domains_js_1.getThirdwebDomains)().pay}/buy-with-crypto/status/v1`;
exports.getPayBuyWithCryptoStatusUrl = getPayBuyWithCryptoStatusUrl;
/**
 * Constructs the endpoint to get a pay quote.
 * @param client - The Thirdweb client containing the baseUrl config
 * @internal
 */
const getPayBuyWithCryptoQuoteEndpoint = () => `https://${(0, domains_js_1.getThirdwebDomains)().pay}/buy-with-crypto/quote/v1`;
exports.getPayBuyWithCryptoQuoteEndpoint = getPayBuyWithCryptoQuoteEndpoint;
/**
 * Constructs the endpoint to get a wallet address swap history.
 * @param client - The Thirdweb client containing the baseUrl config
 * @internal
 */
const getPayBuyWithCryptoHistoryEndpoint = () => `https://${(0, domains_js_1.getThirdwebDomains)().pay}/buy-with-crypto/history/v1`;
exports.getPayBuyWithCryptoHistoryEndpoint = getPayBuyWithCryptoHistoryEndpoint;
/**
 * Constructs the endpoint to get the pay endpoint
 * @internal
 */
const getPayChainsEndpoint = () => `https://${(0, domains_js_1.getThirdwebDomains)().pay}/chains`;
exports.getPayChainsEndpoint = getPayChainsEndpoint;
//# sourceMappingURL=definitions.js.map