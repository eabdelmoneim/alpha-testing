import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the keyRegistry function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension FARCASTER
 * @example
 * ```
 * import { decodeKeyRegistryResult } from "thirdweb/extensions/farcaster";
 * const result = decodeKeyRegistryResult("...");
 * ```
 */
export declare function decodeKeyRegistryResult(result: Hex): string;
/**
 * Calls the "keyRegistry" function on the contract.
 * @param options - The options for the keyRegistry function.
 * @returns The parsed result of the function call.
 * @extension FARCASTER
 * @example
 * ```
 * import { keyRegistry } from "thirdweb/extensions/farcaster";
 *
 * const result = await keyRegistry();
 *
 * ```
 */
export declare function keyRegistry(options: BaseTransactionOptions): Promise<string>;
//# sourceMappingURL=keyRegistry.d.ts.map