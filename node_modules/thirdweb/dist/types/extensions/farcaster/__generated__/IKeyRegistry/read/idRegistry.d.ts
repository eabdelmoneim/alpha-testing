import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the idRegistry function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension FARCASTER
 * @example
 * ```
 * import { decodeIdRegistryResult } from "thirdweb/extensions/farcaster";
 * const result = decodeIdRegistryResult("...");
 * ```
 */
export declare function decodeIdRegistryResult(result: Hex): string;
/**
 * Calls the "idRegistry" function on the contract.
 * @param options - The options for the idRegistry function.
 * @returns The parsed result of the function call.
 * @extension FARCASTER
 * @example
 * ```
 * import { idRegistry } from "thirdweb/extensions/farcaster";
 *
 * const result = await idRegistry();
 *
 * ```
 */
export declare function idRegistry(options: BaseTransactionOptions): Promise<string>;
//# sourceMappingURL=idRegistry.d.ts.map