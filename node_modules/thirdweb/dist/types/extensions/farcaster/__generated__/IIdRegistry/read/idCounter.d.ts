import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the idCounter function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension FARCASTER
 * @example
 * ```
 * import { decodeIdCounterResult } from "thirdweb/extensions/farcaster";
 * const result = decodeIdCounterResult("...");
 * ```
 */
export declare function decodeIdCounterResult(result: Hex): bigint;
/**
 * Calls the "idCounter" function on the contract.
 * @param options - The options for the idCounter function.
 * @returns The parsed result of the function call.
 * @extension FARCASTER
 * @example
 * ```
 * import { idCounter } from "thirdweb/extensions/farcaster";
 *
 * const result = await idCounter();
 *
 * ```
 */
export declare function idCounter(options: BaseTransactionOptions): Promise<bigint>;
//# sourceMappingURL=idCounter.d.ts.map