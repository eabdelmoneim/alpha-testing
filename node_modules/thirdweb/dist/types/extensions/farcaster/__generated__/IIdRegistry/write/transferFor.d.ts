import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Prettify } from "../../../../../utils/type-utils.js";
/**
 * Represents the parameters for the "transferFor" function.
 */
type TransferForParamsInternal = {
    from: AbiParameterToPrimitiveType<{
        type: "address";
        name: "from";
    }>;
    to: AbiParameterToPrimitiveType<{
        type: "address";
        name: "to";
    }>;
    fromDeadline: AbiParameterToPrimitiveType<{
        type: "uint256";
        name: "fromDeadline";
    }>;
    fromSig: AbiParameterToPrimitiveType<{
        type: "bytes";
        name: "fromSig";
    }>;
    toDeadline: AbiParameterToPrimitiveType<{
        type: "uint256";
        name: "toDeadline";
    }>;
    toSig: AbiParameterToPrimitiveType<{
        type: "bytes";
        name: "toSig";
    }>;
};
export type TransferForParams = Prettify<TransferForParamsInternal | {
    asyncParams: () => Promise<TransferForParamsInternal>;
}>;
/**
 * Encodes the parameters for the "transferFor" function.
 * @param options - The options for the transferFor function.
 * @returns The encoded ABI parameters.
 * @extension FARCASTER
 * @example
 * ```
 * import { encodeTransferForParams } "thirdweb/extensions/farcaster";
 * const result = encodeTransferForParams({
 *  from: ...,
 *  to: ...,
 *  fromDeadline: ...,
 *  fromSig: ...,
 *  toDeadline: ...,
 *  toSig: ...,
 * });
 * ```
 */
export declare function encodeTransferForParams(options: TransferForParamsInternal): `0x${string}`;
/**
 * Calls the "transferFor" function on the contract.
 * @param options - The options for the "transferFor" function.
 * @returns A prepared transaction object.
 * @extension FARCASTER
 * @example
 * ```
 * import { transferFor } from "thirdweb/extensions/farcaster";
 *
 * const transaction = transferFor({
 *  from: ...,
 *  to: ...,
 *  fromDeadline: ...,
 *  fromSig: ...,
 *  toDeadline: ...,
 *  toSig: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
export declare function transferFor(options: BaseTransactionOptions<TransferForParams>): import("../../../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction>;
export {};
//# sourceMappingURL=transferFor.d.ts.map