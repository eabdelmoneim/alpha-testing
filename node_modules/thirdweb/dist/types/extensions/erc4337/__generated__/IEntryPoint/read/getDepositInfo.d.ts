import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Represents the parameters for the "getDepositInfo" function.
 */
export type GetDepositInfoParams = {
    account: AbiParameterToPrimitiveType<{
        type: "address";
        name: "account";
    }>;
};
/**
 * Encodes the parameters for the "getDepositInfo" function.
 * @param options - The options for the getDepositInfo function.
 * @returns The encoded ABI parameters.
 * @extension ERC4337
 * @example
 * ```
 * import { encodeGetDepositInfoParams } "thirdweb/extensions/erc4337";
 * const result = encodeGetDepositInfoParams({
 *  account: ...,
 * });
 * ```
 */
export declare function encodeGetDepositInfoParams(options: GetDepositInfoParams): `0x${string}`;
/**
 * Decodes the result of the getDepositInfo function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC4337
 * @example
 * ```
 * import { decodeGetDepositInfoResult } from "thirdweb/extensions/erc4337";
 * const result = decodeGetDepositInfoResult("...");
 * ```
 */
export declare function decodeGetDepositInfoResult(result: Hex): {
    deposit: bigint;
    staked: boolean;
    stake: bigint;
    unstakeDelaySec: number;
    withdrawTime: number;
};
/**
 * Calls the "getDepositInfo" function on the contract.
 * @param options - The options for the getDepositInfo function.
 * @returns The parsed result of the function call.
 * @extension ERC4337
 * @example
 * ```
 * import { getDepositInfo } from "thirdweb/extensions/erc4337";
 *
 * const result = await getDepositInfo({
 *  account: ...,
 * });
 *
 * ```
 */
export declare function getDepositInfo(options: BaseTransactionOptions<GetDepositInfoParams>): Promise<{
    deposit: bigint;
    staked: boolean;
    stake: bigint;
    unstakeDelaySec: number;
    withdrawTime: number;
}>;
//# sourceMappingURL=getDepositInfo.d.ts.map