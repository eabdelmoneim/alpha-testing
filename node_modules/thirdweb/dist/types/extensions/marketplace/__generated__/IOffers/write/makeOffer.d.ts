import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Prettify } from "../../../../../utils/type-utils.js";
/**
 * Represents the parameters for the "makeOffer" function.
 */
type MakeOfferParamsInternal = {
    params: AbiParameterToPrimitiveType<{
        type: "tuple";
        name: "_params";
        components: [
            {
                type: "address";
                name: "assetContract";
            },
            {
                type: "uint256";
                name: "tokenId";
            },
            {
                type: "uint256";
                name: "quantity";
            },
            {
                type: "address";
                name: "currency";
            },
            {
                type: "uint256";
                name: "totalPrice";
            },
            {
                type: "uint256";
                name: "expirationTimestamp";
            }
        ];
    }>;
};
export type MakeOfferParams = Prettify<MakeOfferParamsInternal | {
    asyncParams: () => Promise<MakeOfferParamsInternal>;
}>;
/**
 * Encodes the parameters for the "makeOffer" function.
 * @param options - The options for the makeOffer function.
 * @returns The encoded ABI parameters.
 * @extension MARKETPLACE
 * @example
 * ```
 * import { encodeMakeOfferParams } "thirdweb/extensions/marketplace";
 * const result = encodeMakeOfferParams({
 *  params: ...,
 * });
 * ```
 */
export declare function encodeMakeOfferParams(options: MakeOfferParamsInternal): `0x${string}`;
/**
 * Calls the "makeOffer" function on the contract.
 * @param options - The options for the "makeOffer" function.
 * @returns A prepared transaction object.
 * @extension MARKETPLACE
 * @example
 * ```
 * import { makeOffer } from "thirdweb/extensions/marketplace";
 *
 * const transaction = makeOffer({
 *  params: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
export declare function makeOffer(options: BaseTransactionOptions<MakeOfferParams>): import("../../../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction>;
export {};
//# sourceMappingURL=makeOffer.d.ts.map