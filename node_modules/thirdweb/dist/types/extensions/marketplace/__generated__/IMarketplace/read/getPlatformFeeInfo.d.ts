import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the getPlatformFeeInfo function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension MARKETPLACE
 * @example
 * ```
 * import { decodeGetPlatformFeeInfoResult } from "thirdweb/extensions/marketplace";
 * const result = decodeGetPlatformFeeInfoResult("...");
 * ```
 */
export declare function decodeGetPlatformFeeInfoResult(result: Hex): readonly [string, number];
/**
 * Calls the "getPlatformFeeInfo" function on the contract.
 * @param options - The options for the getPlatformFeeInfo function.
 * @returns The parsed result of the function call.
 * @extension MARKETPLACE
 * @example
 * ```
 * import { getPlatformFeeInfo } from "thirdweb/extensions/marketplace";
 *
 * const result = await getPlatformFeeInfo();
 *
 * ```
 */
export declare function getPlatformFeeInfo(options: BaseTransactionOptions): Promise<readonly [string, number]>;
//# sourceMappingURL=getPlatformFeeInfo.d.ts.map