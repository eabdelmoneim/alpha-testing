import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the contractType function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { decodeContractTypeResult } from "thirdweb/extensions/marketplace";
 * const result = decodeContractTypeResult("...");
 * ```
 */
export declare function decodeContractTypeResult(result: Hex): `0x${string}`;
/**
 * Calls the "contractType" function on the contract.
 * @param options - The options for the contractType function.
 * @returns The parsed result of the function call.
 * @extension MARKETPLACE
 * @example
 * ```ts
 * import { contractType } from "thirdweb/extensions/marketplace";
 *
 * const result = await contractType();
 *
 * ```
 */
export declare function contractType(options: BaseTransactionOptions): Promise<`0x${string}`>;
//# sourceMappingURL=contractType.d.ts.map