import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Represents the parameters for the "isAuctionExpired" function.
 */
export type IsAuctionExpiredParams = {
    auctionId: AbiParameterToPrimitiveType<{
        type: "uint256";
        name: "_auctionId";
    }>;
};
/**
 * Encodes the parameters for the "isAuctionExpired" function.
 * @param options - The options for the isAuctionExpired function.
 * @returns The encoded ABI parameters.
 * @extension MARKETPLACE
 * @example
 * ```
 * import { encodeIsAuctionExpiredParams } "thirdweb/extensions/marketplace";
 * const result = encodeIsAuctionExpiredParams({
 *  auctionId: ...,
 * });
 * ```
 */
export declare function encodeIsAuctionExpiredParams(options: IsAuctionExpiredParams): `0x${string}`;
/**
 * Decodes the result of the isAuctionExpired function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension MARKETPLACE
 * @example
 * ```
 * import { decodeIsAuctionExpiredResult } from "thirdweb/extensions/marketplace";
 * const result = decodeIsAuctionExpiredResult("...");
 * ```
 */
export declare function decodeIsAuctionExpiredResult(result: Hex): boolean;
/**
 * Calls the "isAuctionExpired" function on the contract.
 * @param options - The options for the isAuctionExpired function.
 * @returns The parsed result of the function call.
 * @extension MARKETPLACE
 * @example
 * ```
 * import { isAuctionExpired } from "thirdweb/extensions/marketplace";
 *
 * const result = await isAuctionExpired({
 *  auctionId: ...,
 * });
 *
 * ```
 */
export declare function isAuctionExpired(options: BaseTransactionOptions<IsAuctionExpiredParams>): Promise<boolean>;
//# sourceMappingURL=isAuctionExpired.d.ts.map