import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Represents the parameters for the "maxRedeem" function.
 */
export type MaxRedeemParams = {
    owner: AbiParameterToPrimitiveType<{
        name: "owner";
        type: "address";
        internalType: "address";
    }>;
};
/**
 * Encodes the parameters for the "maxRedeem" function.
 * @param options - The options for the maxRedeem function.
 * @returns The encoded ABI parameters.
 * @extension ERC4626
 * @example
 * ```ts
 * import { encodeMaxRedeemParams } "thirdweb/extensions/erc4626";
 * const result = encodeMaxRedeemParams({
 *  owner: ...,
 * });
 * ```
 */
export declare function encodeMaxRedeemParams(options: MaxRedeemParams): `0x${string}`;
/**
 * Decodes the result of the maxRedeem function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC4626
 * @example
 * ```ts
 * import { decodeMaxRedeemResult } from "thirdweb/extensions/erc4626";
 * const result = decodeMaxRedeemResult("...");
 * ```
 */
export declare function decodeMaxRedeemResult(result: Hex): bigint;
/**
 * Calls the "maxRedeem" function on the contract.
 * @param options - The options for the maxRedeem function.
 * @returns The parsed result of the function call.
 * @extension ERC4626
 * @example
 * ```ts
 * import { maxRedeem } from "thirdweb/extensions/erc4626";
 *
 * const result = await maxRedeem({
 *  owner: ...,
 * });
 *
 * ```
 */
export declare function maxRedeem(options: BaseTransactionOptions<MaxRedeemParams>): Promise<bigint>;
//# sourceMappingURL=maxRedeem.d.ts.map