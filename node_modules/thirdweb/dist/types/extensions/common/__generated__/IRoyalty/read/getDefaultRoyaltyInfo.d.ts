import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the getDefaultRoyaltyInfo function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension COMMON
 * @example
 * ```ts
 * import { decodeGetDefaultRoyaltyInfoResult } from "thirdweb/extensions/common";
 * const result = decodeGetDefaultRoyaltyInfoResult("...");
 * ```
 */
export declare function decodeGetDefaultRoyaltyInfoResult(result: Hex): readonly [string, number];
/**
 * Calls the "getDefaultRoyaltyInfo" function on the contract.
 * @param options - The options for the getDefaultRoyaltyInfo function.
 * @returns The parsed result of the function call.
 * @extension COMMON
 * @example
 * ```ts
 * import { getDefaultRoyaltyInfo } from "thirdweb/extensions/common";
 *
 * const result = await getDefaultRoyaltyInfo();
 *
 * ```
 */
export declare function getDefaultRoyaltyInfo(options: BaseTransactionOptions): Promise<readonly [string, number]>;
//# sourceMappingURL=getDefaultRoyaltyInfo.d.ts.map