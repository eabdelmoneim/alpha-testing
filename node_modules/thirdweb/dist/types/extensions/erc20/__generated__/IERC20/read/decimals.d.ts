import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the decimals function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC20
 * @example
 * ```
 * import { decodeDecimalsResult } from "thirdweb/extensions/erc20";
 * const result = decodeDecimalsResult("...");
 * ```
 */
export declare function decodeDecimalsResult(result: Hex): number;
/**
 * Calls the "decimals" function on the contract.
 * @param options - The options for the decimals function.
 * @returns The parsed result of the function call.
 * @extension ERC20
 * @example
 * ```
 * import { decimals } from "thirdweb/extensions/erc20";
 *
 * const result = await decimals();
 *
 * ```
 */
export declare function decimals(options: BaseTransactionOptions): Promise<number>;
//# sourceMappingURL=decimals.d.ts.map