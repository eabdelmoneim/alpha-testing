import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the DOMAIN_SEPARATOR function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC20
 * @example
 * ```
 * import { decodeDOMAIN_SEPARATORResult } from "thirdweb/extensions/erc20";
 * const result = decodeDOMAIN_SEPARATORResult("...");
 * ```
 */
export declare function decodeDOMAIN_SEPARATORResult(result: Hex): `0x${string}`;
/**
 * Calls the "DOMAIN_SEPARATOR" function on the contract.
 * @param options - The options for the DOMAIN_SEPARATOR function.
 * @returns The parsed result of the function call.
 * @extension ERC20
 * @example
 * ```
 * import { DOMAIN_SEPARATOR } from "thirdweb/extensions/erc20";
 *
 * const result = await DOMAIN_SEPARATOR();
 *
 * ```
 */
export declare function DOMAIN_SEPARATOR(options: BaseTransactionOptions): Promise<`0x${string}`>;
//# sourceMappingURL=DOMAIN_SEPARATOR.d.ts.map