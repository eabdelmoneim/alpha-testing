import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the appURI function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension THIRDWEB
 * @example
 * ```ts
 * import { decodeAppURIResult } from "thirdweb/extensions/thirdweb";
 * const result = decodeAppURIResult("...");
 * ```
 */
export declare function decodeAppURIResult(result: Hex): string;
/**
 * Calls the "appURI" function on the contract.
 * @param options - The options for the appURI function.
 * @returns The parsed result of the function call.
 * @extension THIRDWEB
 * @example
 * ```ts
 * import { appURI } from "thirdweb/extensions/thirdweb";
 *
 * const result = await appURI();
 *
 * ```
 */
export declare function appURI(options: BaseTransactionOptions): Promise<string>;
//# sourceMappingURL=appURI.d.ts.map