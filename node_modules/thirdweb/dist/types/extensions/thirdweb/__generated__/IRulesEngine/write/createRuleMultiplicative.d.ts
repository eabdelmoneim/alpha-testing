import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Prettify } from "../../../../../utils/type-utils.js";
/**
 * Represents the parameters for the "createRuleMultiplicative" function.
 */
type CreateRuleMultiplicativeParamsInternal = {
    rule: AbiParameterToPrimitiveType<{
        type: "tuple";
        name: "rule";
        components: [
            {
                type: "address";
                name: "token";
            },
            {
                type: "uint8";
                name: "tokenType";
            },
            {
                type: "uint256";
                name: "tokenId";
            },
            {
                type: "uint256";
                name: "scorePerOwnedToken";
            }
        ];
    }>;
};
export type CreateRuleMultiplicativeParams = Prettify<CreateRuleMultiplicativeParamsInternal | {
    asyncParams: () => Promise<CreateRuleMultiplicativeParamsInternal>;
}>;
/**
 * Encodes the parameters for the "createRuleMultiplicative" function.
 * @param options - The options for the createRuleMultiplicative function.
 * @returns The encoded ABI parameters.
 * @extension THIRDWEB
 * @example
 * ```
 * import { encodeCreateRuleMultiplicativeParams } "thirdweb/extensions/thirdweb";
 * const result = encodeCreateRuleMultiplicativeParams({
 *  rule: ...,
 * });
 * ```
 */
export declare function encodeCreateRuleMultiplicativeParams(options: CreateRuleMultiplicativeParamsInternal): `0x${string}`;
/**
 * Calls the "createRuleMultiplicative" function on the contract.
 * @param options - The options for the "createRuleMultiplicative" function.
 * @returns A prepared transaction object.
 * @extension THIRDWEB
 * @example
 * ```
 * import { createRuleMultiplicative } from "thirdweb/extensions/thirdweb";
 *
 * const transaction = createRuleMultiplicative({
 *  rule: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
export declare function createRuleMultiplicative(options: BaseTransactionOptions<CreateRuleMultiplicativeParams>): import("../../../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction>;
export {};
//# sourceMappingURL=createRuleMultiplicative.d.ts.map