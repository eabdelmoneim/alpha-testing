import type { Address } from "abitype";
import { UniswapFee } from "../types.js";
import type { BaseTransactionOptions } from "../../../transaction/types.js";
/**
 * Represents the parameters for the `findUniswapV3Pool` function.
 */
export type GetUniswapV3PoolsParams = {
    tokenA: Address;
    tokenB: Address;
};
export type GetUniswapV3PoolsResult = {
    poolFee: UniswapFee;
    poolAddress: Address;
};
/**
 * Finds the Uniswap V3 pools for the two tokens.
 * @param options - The token pair to find any pools for any Uniswap contract that implements getPool.
 * @returns The pools' addresses and fees.
 * @extension UNISWAP
 * @example
 * ```ts
 * import { getUniswapV3Pool } from "thirdweb/extensions/uniswap";
 * const { poolFee, poolAddress } = await getUniswapV3Pool({
 *  tokenA: "0x...",
 *  tokenB: "0x...",
 *  factoryContract: contract
 * });
 * ```
 */
export declare function getUniswapV3Pools(options: BaseTransactionOptions<GetUniswapV3PoolsParams>): Promise<GetUniswapV3PoolsResult[]>;
//# sourceMappingURL=getUniswapV3Pools.d.ts.map