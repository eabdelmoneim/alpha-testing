import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Prettify } from "../../../../../utils/type-utils.js";
/**
 * Represents the parameters for the "quoteExactOutput" function.
 */
type QuoteExactOutputParamsInternal = {
    path: AbiParameterToPrimitiveType<{
        type: "bytes";
        name: "path";
    }>;
    amountOut: AbiParameterToPrimitiveType<{
        type: "uint256";
        name: "amountOut";
    }>;
};
export type QuoteExactOutputParams = Prettify<QuoteExactOutputParamsInternal | {
    asyncParams: () => Promise<QuoteExactOutputParamsInternal>;
}>;
/**
 * Encodes the parameters for the "quoteExactOutput" function.
 * @param options - The options for the quoteExactOutput function.
 * @returns The encoded ABI parameters.
 * @extension UNISWAP
 * @example
 * ```
 * import { encodeQuoteExactOutputParams } "thirdweb/extensions/uniswap";
 * const result = encodeQuoteExactOutputParams({
 *  path: ...,
 *  amountOut: ...,
 * });
 * ```
 */
export declare function encodeQuoteExactOutputParams(options: QuoteExactOutputParamsInternal): `0x${string}`;
/**
 * Calls the "quoteExactOutput" function on the contract.
 * @param options - The options for the "quoteExactOutput" function.
 * @returns A prepared transaction object.
 * @extension UNISWAP
 * @example
 * ```
 * import { quoteExactOutput } from "thirdweb/extensions/uniswap";
 *
 * const transaction = quoteExactOutput({
 *  path: ...,
 *  amountOut: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
export declare function quoteExactOutput(options: BaseTransactionOptions<QuoteExactOutputParams>): import("../../../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction>;
export {};
//# sourceMappingURL=quoteExactOutput.d.ts.map