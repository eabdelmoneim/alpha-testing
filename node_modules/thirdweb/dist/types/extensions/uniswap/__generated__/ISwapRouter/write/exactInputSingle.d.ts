import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Prettify } from "../../../../../utils/type-utils.js";
/**
 * Represents the parameters for the "exactInputSingle" function.
 */
type ExactInputSingleParamsInternal = {
    params: AbiParameterToPrimitiveType<{
        type: "tuple";
        name: "params";
        components: [
            {
                type: "address";
                name: "tokenIn";
            },
            {
                type: "address";
                name: "tokenOut";
            },
            {
                type: "uint24";
                name: "fee";
            },
            {
                type: "address";
                name: "recipient";
            },
            {
                type: "uint256";
                name: "deadline";
            },
            {
                type: "uint256";
                name: "amountIn";
            },
            {
                type: "uint256";
                name: "amountOutMinimum";
            },
            {
                type: "uint160";
                name: "sqrtPriceLimitX96";
            }
        ];
    }>;
};
export type ExactInputSingleParams = Prettify<ExactInputSingleParamsInternal | {
    asyncParams: () => Promise<ExactInputSingleParamsInternal>;
}>;
/**
 * Encodes the parameters for the "exactInputSingle" function.
 * @param options - The options for the exactInputSingle function.
 * @returns The encoded ABI parameters.
 * @extension UNISWAP
 * @example
 * ```
 * import { encodeExactInputSingleParams } "thirdweb/extensions/uniswap";
 * const result = encodeExactInputSingleParams({
 *  params: ...,
 * });
 * ```
 */
export declare function encodeExactInputSingleParams(options: ExactInputSingleParamsInternal): `0x${string}`;
/**
 * Calls the "exactInputSingle" function on the contract.
 * @param options - The options for the "exactInputSingle" function.
 * @returns A prepared transaction object.
 * @extension UNISWAP
 * @example
 * ```
 * import { exactInputSingle } from "thirdweb/extensions/uniswap";
 *
 * const transaction = exactInputSingle({
 *  params: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
export declare function exactInputSingle(options: BaseTransactionOptions<ExactInputSingleParams>): import("../../../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction>;
export {};
//# sourceMappingURL=exactInputSingle.d.ts.map