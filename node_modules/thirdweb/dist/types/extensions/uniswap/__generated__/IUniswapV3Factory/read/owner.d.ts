import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the owner function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension UNISWAP
 * @example
 * ```
 * import { decodeOwnerResult } from "thirdweb/extensions/uniswap";
 * const result = decodeOwnerResult("...");
 * ```
 */
export declare function decodeOwnerResult(result: Hex): string;
/**
 * Calls the "owner" function on the contract.
 * @param options - The options for the owner function.
 * @returns The parsed result of the function call.
 * @extension UNISWAP
 * @example
 * ```
 * import { owner } from "thirdweb/extensions/uniswap";
 *
 * const result = await owner();
 *
 * ```
 */
export declare function owner(options: BaseTransactionOptions): Promise<string>;
//# sourceMappingURL=owner.d.ts.map