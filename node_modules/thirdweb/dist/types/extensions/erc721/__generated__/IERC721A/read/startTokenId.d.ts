import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the startTokenId function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC721
 * @example
 * ```
 * import { decodeStartTokenIdResult } from "thirdweb/extensions/erc721";
 * const result = decodeStartTokenIdResult("...");
 * ```
 */
export declare function decodeStartTokenIdResult(result: Hex): bigint;
/**
 * Calls the "startTokenId" function on the contract.
 * @param options - The options for the startTokenId function.
 * @returns The parsed result of the function call.
 * @extension ERC721
 * @example
 * ```
 * import { startTokenId } from "thirdweb/extensions/erc721";
 *
 * const result = await startTokenId();
 *
 * ```
 */
export declare function startTokenId(options: BaseTransactionOptions): Promise<bigint>;
//# sourceMappingURL=startTokenId.d.ts.map