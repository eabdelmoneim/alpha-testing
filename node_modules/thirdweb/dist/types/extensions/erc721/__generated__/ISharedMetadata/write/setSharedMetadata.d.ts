import type { AbiParameterToPrimitiveType } from "abitype";
import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Prettify } from "../../../../../utils/type-utils.js";
/**
 * Represents the parameters for the "setSharedMetadata" function.
 */
type SetSharedMetadataParamsInternal = {
    metadata: AbiParameterToPrimitiveType<{
        type: "tuple";
        name: "_metadata";
        components: [
            {
                type: "string";
                name: "name";
            },
            {
                type: "string";
                name: "description";
            },
            {
                type: "string";
                name: "imageURI";
            },
            {
                type: "string";
                name: "animationURI";
            }
        ];
    }>;
};
export type SetSharedMetadataParams = Prettify<SetSharedMetadataParamsInternal | {
    asyncParams: () => Promise<SetSharedMetadataParamsInternal>;
}>;
/**
 * Encodes the parameters for the "setSharedMetadata" function.
 * @param options - The options for the setSharedMetadata function.
 * @returns The encoded ABI parameters.
 * @extension ERC721
 * @example
 * ```
 * import { encodeSetSharedMetadataParams } "thirdweb/extensions/erc721";
 * const result = encodeSetSharedMetadataParams({
 *  metadata: ...,
 * });
 * ```
 */
export declare function encodeSetSharedMetadataParams(options: SetSharedMetadataParamsInternal): `0x${string}`;
/**
 * Calls the "setSharedMetadata" function on the contract.
 * @param options - The options for the "setSharedMetadata" function.
 * @returns A prepared transaction object.
 * @extension ERC721
 * @example
 * ```
 * import { setSharedMetadata } from "thirdweb/extensions/erc721";
 *
 * const transaction = setSharedMetadata({
 *  metadata: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
export declare function setSharedMetadata(options: BaseTransactionOptions<SetSharedMetadataParams>): import("../../../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction>;
export {};
//# sourceMappingURL=setSharedMetadata.d.ts.map