import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
/**
 * Decodes the result of the getActiveClaimConditionId function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC721
 * @example
 * ```ts
 * import { decodeGetActiveClaimConditionIdResult } from "thirdweb/extensions/erc721";
 * const result = decodeGetActiveClaimConditionIdResult("...");
 * ```
 */
export declare function decodeGetActiveClaimConditionIdResult(result: Hex): bigint;
/**
 * Calls the "getActiveClaimConditionId" function on the contract.
 * @param options - The options for the getActiveClaimConditionId function.
 * @returns The parsed result of the function call.
 * @extension ERC721
 * @example
 * ```ts
 * import { getActiveClaimConditionId } from "thirdweb/extensions/erc721";
 *
 * const result = await getActiveClaimConditionId();
 *
 * ```
 */
export declare function getActiveClaimConditionId(options: BaseTransactionOptions): Promise<bigint>;
//# sourceMappingURL=getActiveClaimConditionId.d.ts.map