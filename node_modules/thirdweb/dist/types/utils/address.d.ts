export type AddressInput = string;
export type Address = `0x${string}`;
/**
 * Checks if a given string is a valid address.
 * @param address The address to check.
 * @returns True if the address is valid, false otherwise.
 * @example
 * ```ts
 * import { isAddress } from 'thirdweb/utils';
 *
 * isAddress('0x5aAeb6053F3E94C9b9A09f33669435E7Ef1BeAed');
 * //=> true
 * ```
 * @utils
 */
export declare function isAddress(address: string): address is Address;
/**
 * Calculates the checksum address for the given address.
 * @param address - The address to calculate the checksum for.
 * @returns The checksum address.
 * @example
 * ```ts
 * import { checksumAddress } from 'thirdweb/utils';
 *
 * checksumAddress('0x5aAeb6053F3E94C9b9A09f33669435E7Ef1BeAed');
 * //=> '0x5aAeb6053F3E94C9b9A09f33669435E7Ef1BeAed'
 * ```
 * @utils
 */
export declare function checksumAddress(address: string): Address;
/**
 * Retrieves the address after performing validation and checksumming.
 * @param address - The address to be validated and checksummed.
 * @returns The validated and checksummed address.
 * @throws Error if the address is invalid.
 * @example
 * ```ts
 * import { getAddress } from 'thirdweb/utils';
 *
 * getAddress('0x5aAeb6053F3E94C9b9A09f33669435E7Ef1BeAed');
 * //=> '0x5aAeb6053F3E94C9b9A09f33669435E7Ef1BeAed'
 * ```
 * @utils
 */
export declare function getAddress(address: string): Address;
//# sourceMappingURL=address.d.ts.map