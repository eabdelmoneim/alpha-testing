import type { Wallet } from "../../../../wallets/interfaces/wallet.js";
import type { ThirdwebClient } from "../../../../client/client.js";
import type { AppMetadata } from "../../../../wallets/types.js";
export type AutoConnectProps = {
    /**
     * Array of wallets that your app uses
     * @example
     * ```tsx
     * import { metamaskConfig, coinbaseConfig, walletConnectConfig } from "thirdweb/react";
     *
     * function Example() {
     *  return (
     *    <AutoConnect
     *      client={client}
     *      wallets={[
     *        metamaskConfig(),
     *        coinbaseConfig(),
     *        walletConnectConfig(),
     *      ]}
     *    />
     *  )
     * }
     * ```
     */
    wallets: Wallet[];
    /**
     * A client is the entry point to the thirdweb SDK.
     * It is required for all other actions.
     * You can create a client using the `createThirdwebClient` function. Refer to the [Creating a Client](https://portal.thirdweb.com/typescript/v5/client) documentation for more information.
     *
     * You must provide a `clientId` or `secretKey` in order to initialize a client. Pass `clientId` if you want for client-side usage and `secretKey` for server-side usage.
     *
     * ```tsx
     * import { createThirdwebClient } from "thirdweb";
     *
     * const client = createThirdwebClient({
     *  clientId: "<your_client_id>",
     * })
     * ```
     */
    client: ThirdwebClient;
    /**
     * Metadata of the app that will be passed to connected wallet.
     *
     * Some wallets display this information to the user when they connect to your app.
     *
     *
     * ```ts
     * {
     *   name: "thirdweb powered dApp",
     *   url: "https://thirdweb.com",
     *   description: "thirdweb powered dApp",
     *   logoUrl: "https://thirdweb.com/favicon.ico",
     * };
     * ```
     */
    appMetadata?: AppMetadata;
    /**
     * if the autoConnection does not succeed within given timeout in milliseconds, it will be cancelled.
     *
     * By default, the timeout is set to 15000ms (15 seconds).
     *
     * ```tsx
     * <AutoConnect
     *  client={client}
     *  autoConnect={{ timeout: 10000 }}
     *  wallets={wallets}
     *  appMetadata={appMetadata}
     * />
     * ```
     */
    timeout?: number;
};
/**
 * AutoConnect last connected wallet on page reload or revisit.
 * Note: If you are using `ConnectButton` or `ConnectEmbed` components, You don't need to use this component as it is already included.
 *
 * This is useful if you are manually connecting the wallets using the [`useConnect`](https://portal.thirdweb.com/references/typescript/v5/useConnect) hook and want to auto connect the last connected wallets on page reload or revisit.
 * @param props - Object of type `AutoConnectProps`. Refer to [`AutoConnectProps`](https://portal.thirdweb.com/references/typescript/v5/AutoConnectProps)
 * @example
 * ```tsx
 * import { AutoConnect } from "@thirdweb/react";
 *
 * // list of wallets that your app uses
 * const wallets = [
 *  metamaskConfig(),
 *  coinbaseConfig(),
 * ]
 *
 * function Example() {
 *  return (
 *    <AutoConnect
 *      wallets={wallets}
 *      client={client}
 *      appMetadata={appMetadata}
 *    />
 *  );
 * }
 * ```
 * @component
 */
export declare function AutoConnect(props: AutoConnectProps): import("react/jsx-runtime.js").JSX.Element;
/**
 * @internal
 */
export declare function NoAutoConnect(): null;
//# sourceMappingURL=useAutoConnect.d.ts.map