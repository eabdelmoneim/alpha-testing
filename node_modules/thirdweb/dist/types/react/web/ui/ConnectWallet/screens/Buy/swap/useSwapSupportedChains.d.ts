import type { ThirdwebClient } from "../../../../../../../client/client.js";
export declare function fetchSwapSupportedChains(client: ThirdwebClient): Promise<{
    readonly id: number;
    readonly name?: string | undefined;
    readonly rpc: string;
    readonly icon?: {
        url: string;
        width: number;
        height: number;
        format: string;
    } | undefined;
    readonly nativeCurrency?: {
        name?: string | undefined;
        symbol?: string | undefined;
        decimals?: number | undefined;
    } | undefined;
    readonly blockExplorers?: {
        name: string;
        url: string;
        apiUrl?: string | undefined;
    }[] | undefined;
    readonly testnet?: true | undefined;
    readonly experimental?: {
        increaseZeroByteCount?: boolean | undefined;
    } | undefined;
}[]>;
/**
 * @internal
 */
export declare function useSwapSupportedChains(client: ThirdwebClient): import("@tanstack/react-query").UseQueryResult<{
    readonly id: number;
    readonly name?: string | undefined;
    readonly rpc: string;
    readonly icon?: {
        url: string;
        width: number;
        height: number;
        format: string;
    } | undefined;
    readonly nativeCurrency?: {
        name?: string | undefined;
        symbol?: string | undefined;
        decimals?: number | undefined;
    } | undefined;
    readonly blockExplorers?: {
        name: string;
        url: string;
        apiUrl?: string | undefined;
    }[] | undefined;
    readonly testnet?: true | undefined;
    readonly experimental?: {
        increaseZeroByteCount?: boolean | undefined;
    } | undefined;
}[], Error>;
//# sourceMappingURL=useSwapSupportedChains.d.ts.map