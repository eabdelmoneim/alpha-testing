import type { ThirdwebContract } from "../../../contract/contract.js";
import type { SmartWalletOptions } from "../types.ts";
import type { Account, SendTransactionOption } from "../../interfaces/wallet.js";
import type { PreparedTransaction } from "../../../transaction/prepare-transaction.js";
/**
 * @internal
 */
export declare function predictAddress(factoryContract: ThirdwebContract, options: SmartWalletOptions & {
    personalAccountAddress?: string;
}): Promise<string>;
/**
 * @internal
 */
export declare function prepareCreateAccount(args: {
    factoryContract: ThirdwebContract;
    options: SmartWalletOptions & {
        personalAccount: Account;
    };
}): PreparedTransaction;
/**
 * @internal
 */
export declare function prepareExecute(args: {
    accountContract: ThirdwebContract;
    options: SmartWalletOptions;
    transaction: SendTransactionOption;
}): PreparedTransaction;
/**
 * @internal
 */
export declare function prepareBatchExecute(args: {
    accountContract: ThirdwebContract;
    options: SmartWalletOptions;
    transactions: SendTransactionOption[];
}): PreparedTransaction;
//# sourceMappingURL=calls.d.ts.map