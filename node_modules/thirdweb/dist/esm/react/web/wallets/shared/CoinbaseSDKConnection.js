import { jsx as _jsx } from "react/jsx-runtime";
import { useConnectUI } from "../../../core/hooks/others/useWalletConnectionCtx.js";
import { useCallback, useEffect, useRef, useState } from "react";
import { ScanScreen } from "./ScanScreen.js";
/**
 * @internal
 */
function CoinbaseSDKWalletConnectUI(props) {
    const { onBack, done, wallet, walletInfo, onGetStarted, locale } = props;
    const [qrCodeUri, setQrCodeUri] = useState();
    const { client, chain } = useConnectUI();
    const connect = useCallback(() => {
        wallet
            .connect({
            client,
            chain,
            onUri: (uri) => {
                setQrCodeUri(uri);
            },
            headlessMode: true,
            reloadOnDisconnect: false,
        })
            .then(() => {
            done();
        })
            .catch((e) => {
            console.error(e);
        });
    }, [client, wallet, chain, done]);
    const scanStarted = useRef(false);
    useEffect(() => {
        if (scanStarted.current) {
            return;
        }
        scanStarted.current = true;
        connect();
    }, [connect]);
    return (_jsx(ScanScreen, { qrScanInstruction: locale.scanScreen.instruction, onBack: onBack, onGetStarted: onGetStarted, qrCodeUri: qrCodeUri, walletName: walletInfo.name, walletId: "com.coinbase.wallet", getStartedLink: locale.getStartedLink }));
}
export default CoinbaseSDKWalletConnectUI;
//# sourceMappingURL=CoinbaseSDKConnection.js.map