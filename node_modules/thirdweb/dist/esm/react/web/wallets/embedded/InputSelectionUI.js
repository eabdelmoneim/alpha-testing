import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from "react/jsx-runtime";
import { useState } from "react";
import { Spacer } from "../../ui/components/Spacer.js";
import { Button } from "../../ui/components/buttons.js";
import { Input } from "../../ui/components/formElements.js";
import { Text } from "../../ui/components/text.js";
/**
 * @internal
 */
export function InputSelectionUI(props) {
    const [input, setInput] = useState("");
    const [error, setError] = useState();
    const [showError, setShowError] = useState(false);
    const handleSelect = () => {
        setShowError(true);
        if (!input || !!error) {
            return;
        }
        props.onSelect(input);
    };
    const renderingError = (showError && !!error) ||
        (!input && !!props.emptyErrorMessage && showError);
    return (_jsxs("div", { children: [_jsx("div", { style: {
                    position: "relative",
                }, children: _jsx(Input, { tabIndex: -1, placeholder: props.placeholder, variant: "outline", type: props.type, name: props.name, value: input, "data-error": renderingError, onChange: (e) => {
                        setInput(e.target.value);
                        if (props.errorMessage) {
                            setError(props.errorMessage(e.target.value));
                        }
                        else {
                            setError(undefined);
                        }
                    }, onKeyDown: (e) => {
                        if (e.key === "Enter") {
                            handleSelect();
                        }
                    } }) }), showError && error && (_jsxs(_Fragment, { children: [_jsx(Spacer, { y: "xs" }), _jsx(Text, { color: "danger", size: "sm", children: error })] })), !(showError && error) &&
                !input &&
                props.emptyErrorMessage &&
                showError && (_jsxs(_Fragment, { children: [_jsx(Spacer, { y: "xs" }), _jsx(Text, { color: "danger", size: "sm", children: props.emptyErrorMessage })] })), _jsx(Spacer, { y: "md" }), _jsx(Button, { variant: "accent", onClick: handleSelect, fullWidth: true, children: props.submitButtonText })] }));
}
//# sourceMappingURL=InputSelectionUI.js.map