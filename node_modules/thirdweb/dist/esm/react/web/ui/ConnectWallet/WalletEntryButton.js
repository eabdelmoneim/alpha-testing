import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Container } from "../components/basic.js";
import { useCustomTheme } from "../design-system/CustomThemeProvider.js";
import { StyledButton } from "../design-system/elements.js";
import { iconSize, spacing, radius, fontSize } from "../design-system/index.js";
import { Text } from "../components/text.js";
import { useScreenContext } from "./Modal/screen.js";
// import { localWalletMetadata } from "../../../../wallets/local/index._ts";
import { useWalletConnectionCtx } from "../../../core/hooks/others/useWalletConnectionCtx.js";
import { useWalletInfo } from "../hooks/useWalletInfo.js";
import { Skeleton } from "../components/Skeleton.js";
import { WalletImage } from "../components/WalletImage.js";
import { getMIPDStore } from "../../../../wallets/injected/mipdStore.js";
/**
 * @internal
 */
export function WalletEntryButton(props) {
    const { walletId, selectWallet } = props;
    const { connectLocale, recommendedWallets } = useWalletConnectionCtx();
    const isRecommended = recommendedWallets?.find((w) => w.id === walletId);
    const { screen } = useScreenContext();
    const walletInfo = useWalletInfo(walletId);
    const walletName = getMIPDStore()
        .getProviders()
        .find((p) => p.info.rdns === walletId)?.info.name ||
        walletInfo.data?.name;
    const isInstalled = getMIPDStore()
        .getProviders()
        .find((p) => p.info.rdns === walletId);
    return (_jsxs(WalletButton, { type: "button", onClick: selectWallet, "data-active": screen && typeof screen === "object" && screen.id === walletId, children: [_jsx(WalletImage, { id: walletId, size: iconSize.xl }), _jsxs(Container, { flex: "column", gap: "xxs", expand: true, children: [walletName ? (_jsx(Text, { color: "primaryText", weight: 600, children: walletName })) : (_jsx(Skeleton, { width: "100px", height: fontSize.md })), isRecommended && _jsx(Text, { size: "sm", children: connectLocale.recommended }), !isRecommended && isInstalled && (_jsx(Text, { size: "sm", children: connectLocale.installed }))] })] }));
}
export const WalletButton = /* @__PURE__ */ StyledButton(() => {
    const theme = useCustomTheme();
    return {
        all: "unset",
        display: "flex",
        alignItems: "center",
        gap: spacing.sm,
        cursor: "pointer",
        boxSizing: "border-box",
        width: "100%",
        color: theme.colors.secondaryText,
        position: "relative",
        borderRadius: radius.md,
        padding: `${spacing.xs} ${spacing.xs}`,
        "&:hover": {
            backgroundColor: theme.colors.walletSelectorButtonHoverBg,
            transform: "scale(1.01)",
        },
        '&[data-active="true"]': {
            backgroundColor: theme.colors.walletSelectorButtonHoverBg,
        },
        transition: "background-color 200ms ease, transform 200ms ease",
    };
});
//# sourceMappingURL=WalletEntryButton.js.map