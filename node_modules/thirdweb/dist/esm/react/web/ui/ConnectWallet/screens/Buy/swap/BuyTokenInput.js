import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Container } from "../../../../components/basic.js";
import { Input } from "../../../../components/formElements.js";
import { Skeleton } from "../../../../components/Skeleton.js";
import { fontSize, iconSize } from "../../../../design-system/index.js";
import { Spacer } from "../../../../components/Spacer.js";
import { Button } from "../../../../components/buttons.js";
import { TokenSelectorButton } from "./TokenSelector.js";
import { useChainQuery } from "../../../../../../core/hooks/others/useChainQuery.js";
import { ChevronDownIcon } from "@radix-ui/react-icons";
import { ChainIcon } from "../../../../components/ChainIcon.js";
import { Text } from "../../../../components/text.js";
/**
 * @internal
 */
export function BuyTokenInput(props) {
    const chainQuery = useChainQuery(props.chain);
    return (_jsxs(Container, { children: [_jsx(Input, { variant: "outline", pattern: "^[0-9]*[.,]?[0-9]*$", inputMode: "decimal", placeholder: "0", type: "text", "data-placeholder": props.value === "", value: props.value || "0", onClick: (e) => {
                    // put cursor at the end of the input
                    if (props.value === "") {
                        e.currentTarget.setSelectionRange(e.currentTarget.value.length, e.currentTarget.value.length);
                    }
                }, onChange: (e) => {
                    let value = e.target.value;
                    if (value.startsWith(".")) {
                        value = "0" + value;
                    }
                    const numValue = Number(value);
                    if (isNaN(numValue)) {
                        return;
                    }
                    if (value.startsWith("0") && !value.startsWith("0.")) {
                        props.onChange(value.slice(1));
                    }
                    else {
                        props.onChange(value);
                    }
                }, style: {
                    border: "none",
                    fontSize: "50px",
                    boxShadow: "none",
                    padding: "0",
                    fontWeight: 600,
                    textAlign: "center",
                } }), _jsx(Spacer, { y: "md" }), _jsx(Container, { flex: "row", center: "x", children: _jsx(TokenSelectorButton, { onClick: props.onTokenClick, token: props.token, chain: props.chain, style: {
                        padding: 0,
                        fontSize: fontSize.sm,
                        border: "none",
                    } }) }), _jsx(Spacer, { y: "md" }), _jsx(Container, { flex: "row", center: "x", children: _jsxs(Button, { variant: "outline", style: {
                        fontSize: fontSize.sm,
                        padding: 0,
                        border: "none",
                    }, gap: "xxs", onClick: props.onChainClick, children: [_jsx(ChainIcon, { chain: chainQuery.data, size: iconSize.sm }), chainQuery.data?.name ? (_jsx(Text, { size: "sm", children: chainQuery.data.name })) : (_jsx(Skeleton, { width: "90px", height: fontSize.xs })), _jsx(Container, { color: "secondaryText", flex: "row", center: "both", children: _jsx(ChevronDownIcon, { width: iconSize.sm, height: iconSize.sm }) })] }) })] }));
}
//# sourceMappingURL=BuyTokenInput.js.map