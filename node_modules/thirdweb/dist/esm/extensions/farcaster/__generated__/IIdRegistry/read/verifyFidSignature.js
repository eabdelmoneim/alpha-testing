import { readContract } from "../../../../../transaction/read-contract.js";
import { encodeAbiParameters } from "../../../../../utils/abi/encodeAbiParameters.js";
import { decodeAbiParameters } from "viem";
const FN_SELECTOR = "0x32faac70";
const FN_INPUTS = [
    {
        type: "address",
        name: "custodyAddress",
    },
    {
        type: "uint256",
        name: "fid",
    },
    {
        type: "bytes32",
        name: "digest",
    },
    {
        type: "bytes",
        name: "sig",
    },
];
const FN_OUTPUTS = [
    {
        type: "bool",
        name: "isValid",
    },
];
/**
 * Encodes the parameters for the "verifyFidSignature" function.
 * @param options - The options for the verifyFidSignature function.
 * @returns The encoded ABI parameters.
 * @extension FARCASTER
 * @example
 * ```ts
 * import { encodeVerifyFidSignatureParams } "thirdweb/extensions/farcaster";
 * const result = encodeVerifyFidSignatureParams({
 *  custodyAddress: ...,
 *  fid: ...,
 *  digest: ...,
 *  sig: ...,
 * });
 * ```
 */
export function encodeVerifyFidSignatureParams(options) {
    return encodeAbiParameters(FN_INPUTS, [
        options.custodyAddress,
        options.fid,
        options.digest,
        options.sig,
    ]);
}
/**
 * Decodes the result of the verifyFidSignature function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension FARCASTER
 * @example
 * ```ts
 * import { decodeVerifyFidSignatureResult } from "thirdweb/extensions/farcaster";
 * const result = decodeVerifyFidSignatureResult("...");
 * ```
 */
export function decodeVerifyFidSignatureResult(result) {
    return decodeAbiParameters(FN_OUTPUTS, result)[0];
}
/**
 * Calls the "verifyFidSignature" function on the contract.
 * @param options - The options for the verifyFidSignature function.
 * @returns The parsed result of the function call.
 * @extension FARCASTER
 * @example
 * ```ts
 * import { verifyFidSignature } from "thirdweb/extensions/farcaster";
 *
 * const result = await verifyFidSignature({
 *  custodyAddress: ...,
 *  fid: ...,
 *  digest: ...,
 *  sig: ...,
 * });
 *
 * ```
 */
export async function verifyFidSignature(options) {
    return readContract({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [options.custodyAddress, options.fid, options.digest, options.sig],
    });
}
//# sourceMappingURL=verifyFidSignature.js.map