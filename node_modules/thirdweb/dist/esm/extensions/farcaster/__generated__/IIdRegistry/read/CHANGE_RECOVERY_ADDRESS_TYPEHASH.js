import { readContract } from "../../../../../transaction/read-contract.js";
import { decodeAbiParameters } from "viem";
const FN_SELECTOR = "0xd5bac7f3";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "bytes32",
    },
];
/**
 * Decodes the result of the CHANGE_RECOVERY_ADDRESS_TYPEHASH function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension FARCASTER
 * @example
 * ```
 * import { decodeCHANGE_RECOVERY_ADDRESS_TYPEHASHResult } from "thirdweb/extensions/farcaster";
 * const result = decodeCHANGE_RECOVERY_ADDRESS_TYPEHASHResult("...");
 * ```
 */
export function decodeCHANGE_RECOVERY_ADDRESS_TYPEHASHResult(result) {
    return decodeAbiParameters(FN_OUTPUTS, result)[0];
}
/**
 * Calls the "CHANGE_RECOVERY_ADDRESS_TYPEHASH" function on the contract.
 * @param options - The options for the CHANGE_RECOVERY_ADDRESS_TYPEHASH function.
 * @returns The parsed result of the function call.
 * @extension FARCASTER
 * @example
 * ```
 * import { CHANGE_RECOVERY_ADDRESS_TYPEHASH } from "thirdweb/extensions/farcaster";
 *
 * const result = await CHANGE_RECOVERY_ADDRESS_TYPEHASH();
 *
 * ```
 */
export async function CHANGE_RECOVERY_ADDRESS_TYPEHASH(options) {
    return readContract({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [],
    });
}
//# sourceMappingURL=CHANGE_RECOVERY_ADDRESS_TYPEHASH.js.map