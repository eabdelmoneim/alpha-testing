import { prepareContractCall } from "../../../../../transaction/prepare-contract-call.js";
import { encodeAbiParameters } from "../../../../../utils/abi/encodeAbiParameters.js";
const FN_SELECTOR = "0xc04b8d59";
const FN_INPUTS = [
    {
        type: "tuple",
        name: "params",
        components: [
            {
                type: "bytes",
                name: "path",
            },
            {
                type: "address",
                name: "recipient",
            },
            {
                type: "uint256",
                name: "deadline",
            },
            {
                type: "uint256",
                name: "amountIn",
            },
            {
                type: "uint256",
                name: "amountOutMinimum",
            },
        ],
    },
];
const FN_OUTPUTS = [
    {
        type: "uint256",
        name: "amountOut",
    },
];
/**
 * Encodes the parameters for the "exactInput" function.
 * @param options - The options for the exactInput function.
 * @returns The encoded ABI parameters.
 * @extension UNISWAP
 * @example
 * ```
 * import { encodeExactInputParams } "thirdweb/extensions/uniswap";
 * const result = encodeExactInputParams({
 *  params: ...,
 * });
 * ```
 */
export function encodeExactInputParams(options) {
    return encodeAbiParameters(FN_INPUTS, [options.params]);
}
/**
 * Calls the "exactInput" function on the contract.
 * @param options - The options for the "exactInput" function.
 * @returns A prepared transaction object.
 * @extension UNISWAP
 * @example
 * ```
 * import { exactInput } from "thirdweb/extensions/uniswap";
 *
 * const transaction = exactInput({
 *  params: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
export function exactInput(options) {
    return prepareContractCall({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: "asyncParams" in options
            ? async () => {
                const resolvedParams = await options.asyncParams();
                return [resolvedParams.params];
            }
            : [options.params],
    });
}
//# sourceMappingURL=exactInput.js.map