import { readContract } from "../../../../../transaction/read-contract.js";
import { decodeAbiParameters } from "viem";
const FN_SELECTOR = "0xfc0c546a";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "uint256",
        name: "chainId",
    },
    {
        type: "address",
        name: "tokenContract",
    },
    {
        type: "uint256",
        name: "tokenId",
    },
];
/**
 * Decodes the result of the token function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC6551
 * @example
 * ```ts
 * import { decodeTokenResult } from "thirdweb/extensions/erc6551";
 * const result = decodeTokenResult("...");
 * ```
 */
export function decodeTokenResult(result) {
    return decodeAbiParameters(FN_OUTPUTS, result);
}
/**
 * Calls the "token" function on the contract.
 * @param options - The options for the token function.
 * @returns The parsed result of the function call.
 * @extension ERC6551
 * @example
 * ```ts
 * import { token } from "thirdweb/extensions/erc6551";
 *
 * const result = await token();
 *
 * ```
 */
export async function token(options) {
    return readContract({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [],
    });
}
//# sourceMappingURL=token.js.map