import { readContract } from "../../../../../transaction/read-contract.js";
import { decodeAbiParameters } from "viem";
const FN_SELECTOR = "0x08e93d0a";
const FN_INPUTS = [];
const FN_OUTPUTS = [
    {
        type: "address[]",
    },
];
/**
 * Decodes the result of the getAllAccounts function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC4337
 * @example
 * ```
 * import { decodeGetAllAccountsResult } from "thirdweb/extensions/erc4337";
 * const result = decodeGetAllAccountsResult("...");
 * ```
 */
export function decodeGetAllAccountsResult(result) {
    return decodeAbiParameters(FN_OUTPUTS, result)[0];
}
/**
 * Calls the "getAllAccounts" function on the contract.
 * @param options - The options for the getAllAccounts function.
 * @returns The parsed result of the function call.
 * @extension ERC4337
 * @example
 * ```
 * import { getAllAccounts } from "thirdweb/extensions/erc4337";
 *
 * const result = await getAllAccounts();
 *
 * ```
 */
export async function getAllAccounts(options) {
    return readContract({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [],
    });
}
//# sourceMappingURL=getAllAccounts.js.map