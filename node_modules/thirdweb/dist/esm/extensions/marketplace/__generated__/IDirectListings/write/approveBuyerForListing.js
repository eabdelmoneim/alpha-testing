import { prepareContractCall } from "../../../../../transaction/prepare-contract-call.js";
import { encodeAbiParameters } from "../../../../../utils/abi/encodeAbiParameters.js";
const FN_SELECTOR = "0x48dd77df";
const FN_INPUTS = [
    {
        type: "uint256",
        name: "_listingId",
    },
    {
        type: "address",
        name: "_buyer",
    },
    {
        type: "bool",
        name: "_toApprove",
    },
];
const FN_OUTPUTS = [];
/**
 * Encodes the parameters for the "approveBuyerForListing" function.
 * @param options - The options for the approveBuyerForListing function.
 * @returns The encoded ABI parameters.
 * @extension MARKETPLACE
 * @example
 * ```
 * import { encodeApproveBuyerForListingParams } "thirdweb/extensions/marketplace";
 * const result = encodeApproveBuyerForListingParams({
 *  listingId: ...,
 *  buyer: ...,
 *  toApprove: ...,
 * });
 * ```
 */
export function encodeApproveBuyerForListingParams(options) {
    return encodeAbiParameters(FN_INPUTS, [
        options.listingId,
        options.buyer,
        options.toApprove,
    ]);
}
/**
 * Calls the "approveBuyerForListing" function on the contract.
 * @param options - The options for the "approveBuyerForListing" function.
 * @returns A prepared transaction object.
 * @extension MARKETPLACE
 * @example
 * ```
 * import { approveBuyerForListing } from "thirdweb/extensions/marketplace";
 *
 * const transaction = approveBuyerForListing({
 *  listingId: ...,
 *  buyer: ...,
 *  toApprove: ...,
 * });
 *
 * // Send the transaction
 * ...
 *
 * ```
 */
export function approveBuyerForListing(options) {
    return prepareContractCall({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: "asyncParams" in options
            ? async () => {
                const resolvedParams = await options.asyncParams();
                return [
                    resolvedParams.listingId,
                    resolvedParams.buyer,
                    resolvedParams.toApprove,
                ];
            }
            : [options.listingId, options.buyer, options.toApprove],
    });
}
//# sourceMappingURL=approveBuyerForListing.js.map