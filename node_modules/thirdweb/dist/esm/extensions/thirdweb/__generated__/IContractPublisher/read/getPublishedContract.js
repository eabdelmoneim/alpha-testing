import { readContract } from "../../../../../transaction/read-contract.js";
import { encodeAbiParameters } from "../../../../../utils/abi/encodeAbiParameters.js";
import { decodeAbiParameters } from "viem";
const FN_SELECTOR = "0x7ec047fa";
const FN_INPUTS = [
    {
        type: "address",
        name: "publisher",
    },
    {
        type: "string",
        name: "contractId",
    },
];
const FN_OUTPUTS = [
    {
        type: "tuple",
        name: "published",
        components: [
            {
                type: "string",
                name: "contractId",
            },
            {
                type: "uint256",
                name: "publishTimestamp",
            },
            {
                type: "string",
                name: "publishMetadataUri",
            },
            {
                type: "bytes32",
                name: "bytecodeHash",
            },
            {
                type: "address",
                name: "implementation",
            },
        ],
    },
];
/**
 * Encodes the parameters for the "getPublishedContract" function.
 * @param options - The options for the getPublishedContract function.
 * @returns The encoded ABI parameters.
 * @extension THIRDWEB
 * @example
 * ```
 * import { encodeGetPublishedContractParams } "thirdweb/extensions/thirdweb";
 * const result = encodeGetPublishedContractParams({
 *  publisher: ...,
 *  contractId: ...,
 * });
 * ```
 */
export function encodeGetPublishedContractParams(options) {
    return encodeAbiParameters(FN_INPUTS, [
        options.publisher,
        options.contractId,
    ]);
}
/**
 * Decodes the result of the getPublishedContract function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension THIRDWEB
 * @example
 * ```
 * import { decodeGetPublishedContractResult } from "thirdweb/extensions/thirdweb";
 * const result = decodeGetPublishedContractResult("...");
 * ```
 */
export function decodeGetPublishedContractResult(result) {
    return decodeAbiParameters(FN_OUTPUTS, result)[0];
}
/**
 * Calls the "getPublishedContract" function on the contract.
 * @param options - The options for the getPublishedContract function.
 * @returns The parsed result of the function call.
 * @extension THIRDWEB
 * @example
 * ```
 * import { getPublishedContract } from "thirdweb/extensions/thirdweb";
 *
 * const result = await getPublishedContract({
 *  publisher: ...,
 *  contractId: ...,
 * });
 *
 * ```
 */
export async function getPublishedContract(options) {
    return readContract({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [options.publisher, options.contractId],
    });
}
//# sourceMappingURL=getPublishedContract.js.map