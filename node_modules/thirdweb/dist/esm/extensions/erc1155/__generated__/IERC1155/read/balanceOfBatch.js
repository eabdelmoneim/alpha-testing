import { readContract } from "../../../../../transaction/read-contract.js";
import { encodeAbiParameters } from "../../../../../utils/abi/encodeAbiParameters.js";
import { decodeAbiParameters } from "viem";
const FN_SELECTOR = "0x4e1273f4";
const FN_INPUTS = [
    {
        type: "address[]",
        name: "_owners",
    },
    {
        type: "uint256[]",
        name: "tokenIds",
    },
];
const FN_OUTPUTS = [
    {
        type: "uint256[]",
    },
];
/**
 * Encodes the parameters for the "balanceOfBatch" function.
 * @param options - The options for the balanceOfBatch function.
 * @returns The encoded ABI parameters.
 * @extension ERC1155
 * @example
 * ```
 * import { encodeBalanceOfBatchParams } "thirdweb/extensions/erc1155";
 * const result = encodeBalanceOfBatchParams({
 *  owners: ...,
 *  tokenIds: ...,
 * });
 * ```
 */
export function encodeBalanceOfBatchParams(options) {
    return encodeAbiParameters(FN_INPUTS, [options.owners, options.tokenIds]);
}
/**
 * Decodes the result of the balanceOfBatch function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension ERC1155
 * @example
 * ```
 * import { decodeBalanceOfBatchResult } from "thirdweb/extensions/erc1155";
 * const result = decodeBalanceOfBatchResult("...");
 * ```
 */
export function decodeBalanceOfBatchResult(result) {
    return decodeAbiParameters(FN_OUTPUTS, result)[0];
}
/**
 * Calls the "balanceOfBatch" function on the contract.
 * @param options - The options for the balanceOfBatch function.
 * @returns The parsed result of the function call.
 * @extension ERC1155
 * @example
 * ```
 * import { balanceOfBatch } from "thirdweb/extensions/erc1155";
 *
 * const result = await balanceOfBatch({
 *  owners: ...,
 *  tokenIds: ...,
 * });
 *
 * ```
 */
export async function balanceOfBatch(options) {
    return readContract({
        contract: options.contract,
        method: [FN_SELECTOR, FN_INPUTS, FN_OUTPUTS],
        params: [options.owners, options.tokenIds],
    });
}
//# sourceMappingURL=balanceOfBatch.js.map